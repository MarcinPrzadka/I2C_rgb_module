
dziala.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000037c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000d  00800060  00800060  000003f0  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  000003f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000000a2  00000000  00000000  00000410  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000188  00000000  00000000  000004b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000008c  00000000  00000000  0000063a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000186  00000000  00000000  000006c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000030  00000000  00000000  0000084c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d5  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__vector_4>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ad 36       	cpi	r26, 0x6D	; 109
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 bc 01 	jmp	0x378	; 0x378 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:

volatile uint8_t pwm1R, pwm1G, pwm1B, pwm2R, pwm2G, pwm2B,pwm3R, pwm3G, pwm3B, pwm4R, pwm4G, pwm4B;


int main(void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	
	DDRB |= (1<<PB3);
  84:	a7 e3       	ldi	r26, 0x37	; 55
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	e7 e3       	ldi	r30, 0x37	; 55
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	88 60       	ori	r24, 0x08	; 8
  90:	8c 93       	st	X, r24

	TCCR0 |= (1<<WGM01)|(1<<WGM00);		// tryb Fast PWM
  92:	a3 e5       	ldi	r26, 0x53	; 83
  94:	b0 e0       	ldi	r27, 0x00	; 0
  96:	e3 e5       	ldi	r30, 0x53	; 83
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	88 64       	ori	r24, 0x48	; 72
  9e:	8c 93       	st	X, r24
	TCCR0 |= (1<<COM01);				// clear at TOP
  a0:	a3 e5       	ldi	r26, 0x53	; 83
  a2:	b0 e0       	ldi	r27, 0x00	; 0
  a4:	e3 e5       	ldi	r30, 0x53	; 83
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	80 62       	ori	r24, 0x20	; 32
  ac:	8c 93       	st	X, r24
	TCCR0 |= (1<<CS00);					// preskaler = 1
  ae:	a3 e5       	ldi	r26, 0x53	; 83
  b0:	b0 e0       	ldi	r27, 0x00	; 0
  b2:	e3 e5       	ldi	r30, 0x53	; 83
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	8c 93       	st	X, r24
	OCR0=255;
  bc:	ec e5       	ldi	r30, 0x5C	; 92
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	80 83       	st	Z, r24
								// wygaszenie diody w kanale PWM
	DDRD |= (1<<PD0)|(1<<PD1)|(1<<PD2)|(1<<PD3)|(1<<PD4)|(1<<PD5);
  c4:	a1 e3       	ldi	r26, 0x31	; 49
  c6:	b0 e0       	ldi	r27, 0x00	; 0
  c8:	e1 e3       	ldi	r30, 0x31	; 49
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	8f 63       	ori	r24, 0x3F	; 63
  d0:	8c 93       	st	X, r24
	DDRC |= (1<<PC2)|(1<<PC3)|(1<<PC4)|(1<<PC5)|(1<<PC6)|(1<<PC7);
  d2:	a4 e3       	ldi	r26, 0x34	; 52
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	e4 e3       	ldi	r30, 0x34	; 52
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	8c 6f       	ori	r24, 0xFC	; 252
  de:	8c 93       	st	X, r24
	PORTD |= (1<<PD0)|(1<<PD1)|(1<<PD2)|(1<<PD3)|(1<<PD4)|(1<<PD5);
  e0:	a2 e3       	ldi	r26, 0x32	; 50
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	e2 e3       	ldi	r30, 0x32	; 50
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	8f 63       	ori	r24, 0x3F	; 63
  ec:	8c 93       	st	X, r24
	PORTC |= (1<<PC2)|(1<<PC3)|(1<<PC4)|(1<<PC5)|(1<<PC6)|(1<<PC7);
  ee:	a5 e3       	ldi	r26, 0x35	; 53
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	e5 e3       	ldi	r30, 0x35	; 53
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	8c 6f       	ori	r24, 0xFC	; 252
  fa:	8c 93       	st	X, r24

	TCCR2 |= (1<<WGM21);	// tryb  CTC
  fc:	a5 e4       	ldi	r26, 0x45	; 69
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	e5 e4       	ldi	r30, 0x45	; 69
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 60       	ori	r24, 0x08	; 8
 108:	8c 93       	st	X, r24
	TCCR2 |= (1<<CS20);		// preskaler = 1
 10a:	a5 e4       	ldi	r26, 0x45	; 69
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	e5 e4       	ldi	r30, 0x45	; 69
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	81 60       	ori	r24, 0x01	; 1
 116:	8c 93       	st	X, r24
	OCR2 = 199;				// dodatkowy podzia³ czêsttotliwoœci przez 200
 118:	e3 e4       	ldi	r30, 0x43	; 67
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	87 ec       	ldi	r24, 0xC7	; 199
 11e:	80 83       	st	Z, r24
	TIMSK |= (1<<OCIE2);	// zezwolenie na przerwanie CompareMatch
 120:	a9 e5       	ldi	r26, 0x59	; 89
 122:	b0 e0       	ldi	r27, 0x00	; 0
 124:	e9 e5       	ldi	r30, 0x59	; 89
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	80 68       	ori	r24, 0x80	; 128
 12c:	8c 93       	st	X, r24
	sei();				// odblokowanie globalne przerwañ
 12e:	78 94       	sei

	while(1)
	{
		
		pwm1R=255;
 130:	8f ef       	ldi	r24, 0xFF	; 255
 132:	80 93 67 00 	sts	0x0067, r24
		pwm2B=255;
 136:	8f ef       	ldi	r24, 0xFF	; 255
 138:	80 93 63 00 	sts	0x0063, r24
 13c:	f9 cf       	rjmp	.-14     	; 0x130 <main+0xb4>

0000013e <__vector_4>:

}

// cia³o procedury obs³ugi przerwania Compare Match Timera2
ISR( TIMER2_COMP_vect )
{
 13e:	1f 92       	push	r1
 140:	0f 92       	push	r0
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	0f 92       	push	r0
 146:	11 24       	eor	r1, r1
 148:	8f 93       	push	r24
 14a:	9f 93       	push	r25
 14c:	af 93       	push	r26
 14e:	bf 93       	push	r27
 150:	ef 93       	push	r30
 152:	ff 93       	push	r31
 154:	df 93       	push	r29
 156:	cf 93       	push	r28
 158:	cd b7       	in	r28, 0x3d	; 61
 15a:	de b7       	in	r29, 0x3e	; 62
	static uint8_t cnt; 
	if(cnt>=pwm1R) PORTD |= (1<<PD0); else PORTD &= ~(1<<PD0);
 15c:	90 91 60 00 	lds	r25, 0x0060
 160:	80 91 67 00 	lds	r24, 0x0067
 164:	98 17       	cp	r25, r24
 166:	40 f0       	brcs	.+16     	; 0x178 <__vector_4+0x3a>
 168:	a2 e3       	ldi	r26, 0x32	; 50
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	e2 e3       	ldi	r30, 0x32	; 50
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	81 60       	ori	r24, 0x01	; 1
 174:	8c 93       	st	X, r24
 176:	07 c0       	rjmp	.+14     	; 0x186 <__vector_4+0x48>
 178:	a2 e3       	ldi	r26, 0x32	; 50
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	e2 e3       	ldi	r30, 0x32	; 50
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	8e 7f       	andi	r24, 0xFE	; 254
 184:	8c 93       	st	X, r24
	if(cnt>=pwm1G) PORTD |= (1<<PD1); else PORTD &= ~(1<<PD1);
 186:	90 91 60 00 	lds	r25, 0x0060
 18a:	80 91 62 00 	lds	r24, 0x0062
 18e:	98 17       	cp	r25, r24
 190:	40 f0       	brcs	.+16     	; 0x1a2 <__vector_4+0x64>
 192:	a2 e3       	ldi	r26, 0x32	; 50
 194:	b0 e0       	ldi	r27, 0x00	; 0
 196:	e2 e3       	ldi	r30, 0x32	; 50
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	82 60       	ori	r24, 0x02	; 2
 19e:	8c 93       	st	X, r24
 1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <__vector_4+0x72>
 1a2:	a2 e3       	ldi	r26, 0x32	; 50
 1a4:	b0 e0       	ldi	r27, 0x00	; 0
 1a6:	e2 e3       	ldi	r30, 0x32	; 50
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	8d 7f       	andi	r24, 0xFD	; 253
 1ae:	8c 93       	st	X, r24
	if(cnt>=pwm1B) PORTD |= (1<<PD2); else PORTD &= ~(1<<PD2);
 1b0:	90 91 60 00 	lds	r25, 0x0060
 1b4:	80 91 65 00 	lds	r24, 0x0065
 1b8:	98 17       	cp	r25, r24
 1ba:	40 f0       	brcs	.+16     	; 0x1cc <__vector_4+0x8e>
 1bc:	a2 e3       	ldi	r26, 0x32	; 50
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	e2 e3       	ldi	r30, 0x32	; 50
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	84 60       	ori	r24, 0x04	; 4
 1c8:	8c 93       	st	X, r24
 1ca:	07 c0       	rjmp	.+14     	; 0x1da <__vector_4+0x9c>
 1cc:	a2 e3       	ldi	r26, 0x32	; 50
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	e2 e3       	ldi	r30, 0x32	; 50
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	8b 7f       	andi	r24, 0xFB	; 251
 1d8:	8c 93       	st	X, r24
	if(cnt>=pwm2R) PORTD |= (1<<PD3); else PORTD &= ~(1<<PD3);
 1da:	90 91 60 00 	lds	r25, 0x0060
 1de:	80 91 6c 00 	lds	r24, 0x006C
 1e2:	98 17       	cp	r25, r24
 1e4:	40 f0       	brcs	.+16     	; 0x1f6 <__vector_4+0xb8>
 1e6:	a2 e3       	ldi	r26, 0x32	; 50
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	e2 e3       	ldi	r30, 0x32	; 50
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	88 60       	ori	r24, 0x08	; 8
 1f2:	8c 93       	st	X, r24
 1f4:	07 c0       	rjmp	.+14     	; 0x204 <__vector_4+0xc6>
 1f6:	a2 e3       	ldi	r26, 0x32	; 50
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	e2 e3       	ldi	r30, 0x32	; 50
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	87 7f       	andi	r24, 0xF7	; 247
 202:	8c 93       	st	X, r24
	if(cnt>=pwm2G) PORTD |= (1<<PD4); else PORTD &= ~(1<<PD4);
 204:	90 91 60 00 	lds	r25, 0x0060
 208:	80 91 68 00 	lds	r24, 0x0068
 20c:	98 17       	cp	r25, r24
 20e:	40 f0       	brcs	.+16     	; 0x220 <__vector_4+0xe2>
 210:	a2 e3       	ldi	r26, 0x32	; 50
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	e2 e3       	ldi	r30, 0x32	; 50
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	80 61       	ori	r24, 0x10	; 16
 21c:	8c 93       	st	X, r24
 21e:	07 c0       	rjmp	.+14     	; 0x22e <__vector_4+0xf0>
 220:	a2 e3       	ldi	r26, 0x32	; 50
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e2 e3       	ldi	r30, 0x32	; 50
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	8f 7e       	andi	r24, 0xEF	; 239
 22c:	8c 93       	st	X, r24
	if(cnt>=pwm2B) PORTD |= (1<<PD5); else PORTD &= ~(1<<PD5);
 22e:	90 91 60 00 	lds	r25, 0x0060
 232:	80 91 63 00 	lds	r24, 0x0063
 236:	98 17       	cp	r25, r24
 238:	40 f0       	brcs	.+16     	; 0x24a <__vector_4+0x10c>
 23a:	a2 e3       	ldi	r26, 0x32	; 50
 23c:	b0 e0       	ldi	r27, 0x00	; 0
 23e:	e2 e3       	ldi	r30, 0x32	; 50
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	80 62       	ori	r24, 0x20	; 32
 246:	8c 93       	st	X, r24
 248:	07 c0       	rjmp	.+14     	; 0x258 <__vector_4+0x11a>
 24a:	a2 e3       	ldi	r26, 0x32	; 50
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	e2 e3       	ldi	r30, 0x32	; 50
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	8f 7d       	andi	r24, 0xDF	; 223
 256:	8c 93       	st	X, r24
	if(cnt>=pwm3R) PORTC |= (1<<PC2); else PORTC &= ~(1<<PC2);
 258:	90 91 60 00 	lds	r25, 0x0060
 25c:	80 91 64 00 	lds	r24, 0x0064
 260:	98 17       	cp	r25, r24
 262:	40 f0       	brcs	.+16     	; 0x274 <__vector_4+0x136>
 264:	a5 e3       	ldi	r26, 0x35	; 53
 266:	b0 e0       	ldi	r27, 0x00	; 0
 268:	e5 e3       	ldi	r30, 0x35	; 53
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	84 60       	ori	r24, 0x04	; 4
 270:	8c 93       	st	X, r24
 272:	07 c0       	rjmp	.+14     	; 0x282 <__vector_4+0x144>
 274:	a5 e3       	ldi	r26, 0x35	; 53
 276:	b0 e0       	ldi	r27, 0x00	; 0
 278:	e5 e3       	ldi	r30, 0x35	; 53
 27a:	f0 e0       	ldi	r31, 0x00	; 0
 27c:	80 81       	ld	r24, Z
 27e:	8b 7f       	andi	r24, 0xFB	; 251
 280:	8c 93       	st	X, r24
	if(cnt>=pwm3G) PORTC |= (1<<PC3); else PORTC &= ~(1<<PC3);
 282:	90 91 60 00 	lds	r25, 0x0060
 286:	80 91 6b 00 	lds	r24, 0x006B
 28a:	98 17       	cp	r25, r24
 28c:	40 f0       	brcs	.+16     	; 0x29e <__vector_4+0x160>
 28e:	a5 e3       	ldi	r26, 0x35	; 53
 290:	b0 e0       	ldi	r27, 0x00	; 0
 292:	e5 e3       	ldi	r30, 0x35	; 53
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	88 60       	ori	r24, 0x08	; 8
 29a:	8c 93       	st	X, r24
 29c:	07 c0       	rjmp	.+14     	; 0x2ac <__vector_4+0x16e>
 29e:	a5 e3       	ldi	r26, 0x35	; 53
 2a0:	b0 e0       	ldi	r27, 0x00	; 0
 2a2:	e5 e3       	ldi	r30, 0x35	; 53
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	87 7f       	andi	r24, 0xF7	; 247
 2aa:	8c 93       	st	X, r24
	if(cnt>=pwm3B) PORTC |= (1<<PC4); else PORTC &= ~(1<<PC4);
 2ac:	90 91 60 00 	lds	r25, 0x0060
 2b0:	80 91 66 00 	lds	r24, 0x0066
 2b4:	98 17       	cp	r25, r24
 2b6:	40 f0       	brcs	.+16     	; 0x2c8 <__vector_4+0x18a>
 2b8:	a5 e3       	ldi	r26, 0x35	; 53
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	e5 e3       	ldi	r30, 0x35	; 53
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	80 61       	ori	r24, 0x10	; 16
 2c4:	8c 93       	st	X, r24
 2c6:	07 c0       	rjmp	.+14     	; 0x2d6 <__vector_4+0x198>
 2c8:	a5 e3       	ldi	r26, 0x35	; 53
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	e5 e3       	ldi	r30, 0x35	; 53
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	8f 7e       	andi	r24, 0xEF	; 239
 2d4:	8c 93       	st	X, r24
	if(cnt>=pwm4R) PORTC |= (1<<PC5); else PORTC &= ~(1<<PC5);
 2d6:	90 91 60 00 	lds	r25, 0x0060
 2da:	80 91 69 00 	lds	r24, 0x0069
 2de:	98 17       	cp	r25, r24
 2e0:	40 f0       	brcs	.+16     	; 0x2f2 <__vector_4+0x1b4>
 2e2:	a5 e3       	ldi	r26, 0x35	; 53
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	e5 e3       	ldi	r30, 0x35	; 53
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	80 62       	ori	r24, 0x20	; 32
 2ee:	8c 93       	st	X, r24
 2f0:	07 c0       	rjmp	.+14     	; 0x300 <__vector_4+0x1c2>
 2f2:	a5 e3       	ldi	r26, 0x35	; 53
 2f4:	b0 e0       	ldi	r27, 0x00	; 0
 2f6:	e5 e3       	ldi	r30, 0x35	; 53
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	8f 7d       	andi	r24, 0xDF	; 223
 2fe:	8c 93       	st	X, r24
	if(cnt>=pwm4G) PORTC |= (1<<PC6); else PORTC &= ~(1<<PC6);
 300:	90 91 60 00 	lds	r25, 0x0060
 304:	80 91 6a 00 	lds	r24, 0x006A
 308:	98 17       	cp	r25, r24
 30a:	40 f0       	brcs	.+16     	; 0x31c <__vector_4+0x1de>
 30c:	a5 e3       	ldi	r26, 0x35	; 53
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	e5 e3       	ldi	r30, 0x35	; 53
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	80 81       	ld	r24, Z
 316:	80 64       	ori	r24, 0x40	; 64
 318:	8c 93       	st	X, r24
 31a:	07 c0       	rjmp	.+14     	; 0x32a <__vector_4+0x1ec>
 31c:	a5 e3       	ldi	r26, 0x35	; 53
 31e:	b0 e0       	ldi	r27, 0x00	; 0
 320:	e5 e3       	ldi	r30, 0x35	; 53
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	80 81       	ld	r24, Z
 326:	8f 7b       	andi	r24, 0xBF	; 191
 328:	8c 93       	st	X, r24
	if(cnt>=pwm4B) PORTC |= (1<<PC7); else PORTC &= ~(1<<PC7);
 32a:	90 91 60 00 	lds	r25, 0x0060
 32e:	80 91 61 00 	lds	r24, 0x0061
 332:	98 17       	cp	r25, r24
 334:	40 f0       	brcs	.+16     	; 0x346 <__vector_4+0x208>
 336:	a5 e3       	ldi	r26, 0x35	; 53
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	e5 e3       	ldi	r30, 0x35	; 53
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	80 81       	ld	r24, Z
 340:	80 68       	ori	r24, 0x80	; 128
 342:	8c 93       	st	X, r24
 344:	07 c0       	rjmp	.+14     	; 0x354 <__vector_4+0x216>
 346:	a5 e3       	ldi	r26, 0x35	; 53
 348:	b0 e0       	ldi	r27, 0x00	; 0
 34a:	e5 e3       	ldi	r30, 0x35	; 53
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	8f 77       	andi	r24, 0x7F	; 127
 352:	8c 93       	st	X, r24
	cnt++;	
 354:	80 91 60 00 	lds	r24, 0x0060
 358:	8f 5f       	subi	r24, 0xFF	; 255
 35a:	80 93 60 00 	sts	0x0060, r24
}
 35e:	cf 91       	pop	r28
 360:	df 91       	pop	r29
 362:	ff 91       	pop	r31
 364:	ef 91       	pop	r30
 366:	bf 91       	pop	r27
 368:	af 91       	pop	r26
 36a:	9f 91       	pop	r25
 36c:	8f 91       	pop	r24
 36e:	0f 90       	pop	r0
 370:	0f be       	out	0x3f, r0	; 63
 372:	0f 90       	pop	r0
 374:	1f 90       	pop	r1
 376:	18 95       	reti

00000378 <_exit>:
 378:	f8 94       	cli

0000037a <__stop_program>:
 37a:	ff cf       	rjmp	.-2      	; 0x37a <__stop_program>
