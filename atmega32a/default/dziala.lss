
dziala.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000113c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000113c  000011d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  00800068  00800068  000011d8  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  000011d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000251  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001f21  00000000  00000000  00001589  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001009  00000000  00000000  000034aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000010fc  00000000  00000000  000044b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  000055b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a3  00000000  00000000  00005770  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00005b13  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000062e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 a4 01 	jmp	0x348	; 0x348 <__vector_4>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a5 37       	cpi	r26, 0x75	; 117
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ec e3       	ldi	r30, 0x3C	; 60
      78:	f1 e1       	ldi	r31, 0x11	; 17
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <avr/interrupt.h>

volatile uint8_t pwm1R, pwm1G, pwm1B, pwm2R, pwm2G, pwm2B,pwm3R, pwm3G, pwm3B, pwm4R, pwm4G, pwm4B;

int main(void)
{
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
      9a:	6d 97       	sbiw	r28, 0x1d	; 29
      9c:	0f b6       	in	r0, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	0f be       	out	0x3f, r0	; 63
      a4:	cd bf       	out	0x3d, r28	; 61
	
	DDRB |= (1<<PB3);
      a6:	a7 e3       	ldi	r26, 0x37	; 55
      a8:	b0 e0       	ldi	r27, 0x00	; 0
      aa:	e7 e3       	ldi	r30, 0x37	; 55
      ac:	f0 e0       	ldi	r31, 0x00	; 0
      ae:	80 81       	ld	r24, Z
      b0:	88 60       	ori	r24, 0x08	; 8
      b2:	8c 93       	st	X, r24

	TCCR0 |= (1<<WGM01)|(1<<WGM00);		// tryb Fast PWM
      b4:	a3 e5       	ldi	r26, 0x53	; 83
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	e3 e5       	ldi	r30, 0x53	; 83
      ba:	f0 e0       	ldi	r31, 0x00	; 0
      bc:	80 81       	ld	r24, Z
      be:	88 64       	ori	r24, 0x48	; 72
      c0:	8c 93       	st	X, r24
	TCCR0 |= (1<<COM01);				// clear at TOP
      c2:	a3 e5       	ldi	r26, 0x53	; 83
      c4:	b0 e0       	ldi	r27, 0x00	; 0
      c6:	e3 e5       	ldi	r30, 0x53	; 83
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	80 62       	ori	r24, 0x20	; 32
      ce:	8c 93       	st	X, r24
	TCCR0 |= (1<<CS00);					// preskaler = 1
      d0:	a3 e5       	ldi	r26, 0x53	; 83
      d2:	b0 e0       	ldi	r27, 0x00	; 0
      d4:	e3 e5       	ldi	r30, 0x53	; 83
      d6:	f0 e0       	ldi	r31, 0x00	; 0
      d8:	80 81       	ld	r24, Z
      da:	81 60       	ori	r24, 0x01	; 1
      dc:	8c 93       	st	X, r24
	OCR0=255;
      de:	ec e5       	ldi	r30, 0x5C	; 92
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	8f ef       	ldi	r24, 0xFF	; 255
      e4:	80 83       	st	Z, r24
								// wygaszenie diody w kanale PWM
	DDRD |= (1<<PD0)|(1<<PD1)|(1<<PD2)|(1<<PD3)|(1<<PD4)|(1<<PD5);
      e6:	a1 e3       	ldi	r26, 0x31	; 49
      e8:	b0 e0       	ldi	r27, 0x00	; 0
      ea:	e1 e3       	ldi	r30, 0x31	; 49
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	8f 63       	ori	r24, 0x3F	; 63
      f2:	8c 93       	st	X, r24
	DDRC |= (1<<PC2)|(1<<PC3)|(1<<PC4)|(1<<PC5)|(1<<PC6)|(1<<PC7);
      f4:	a4 e3       	ldi	r26, 0x34	; 52
      f6:	b0 e0       	ldi	r27, 0x00	; 0
      f8:	e4 e3       	ldi	r30, 0x34	; 52
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	8c 6f       	ori	r24, 0xFC	; 252
     100:	8c 93       	st	X, r24
	PORTD |= (1<<PD0)|(1<<PD1)|(1<<PD2)|(1<<PD3)|(1<<PD4)|(1<<PD5);
     102:	a2 e3       	ldi	r26, 0x32	; 50
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	e2 e3       	ldi	r30, 0x32	; 50
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	8f 63       	ori	r24, 0x3F	; 63
     10e:	8c 93       	st	X, r24
	PORTC |= (1<<PC2)|(1<<PC3)|(1<<PC4)|(1<<PC5)|(1<<PC6)|(1<<PC7);
     110:	a5 e3       	ldi	r26, 0x35	; 53
     112:	b0 e0       	ldi	r27, 0x00	; 0
     114:	e5 e3       	ldi	r30, 0x35	; 53
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	8c 6f       	ori	r24, 0xFC	; 252
     11c:	8c 93       	st	X, r24

	TCCR2 |= (1<<WGM21);	// tryb  CTC
     11e:	a5 e4       	ldi	r26, 0x45	; 69
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	e5 e4       	ldi	r30, 0x45	; 69
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	88 60       	ori	r24, 0x08	; 8
     12a:	8c 93       	st	X, r24
	TCCR2 |= (1<<CS20);		// preskaler = 1
     12c:	a5 e4       	ldi	r26, 0x45	; 69
     12e:	b0 e0       	ldi	r27, 0x00	; 0
     130:	e5 e4       	ldi	r30, 0x45	; 69
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	81 60       	ori	r24, 0x01	; 1
     138:	8c 93       	st	X, r24
	OCR2 = 199;				// dodatkowy podzia³ czêsttotliwoœci przez 200
     13a:	e3 e4       	ldi	r30, 0x43	; 67
     13c:	f0 e0       	ldi	r31, 0x00	; 0
     13e:	87 ec       	ldi	r24, 0xC7	; 199
     140:	80 83       	st	Z, r24
	TIMSK |= (1<<OCIE2);	// zezwolenie na przerwanie CompareMatch
     142:	a9 e5       	ldi	r26, 0x59	; 89
     144:	b0 e0       	ldi	r27, 0x00	; 0
     146:	e9 e5       	ldi	r30, 0x59	; 89
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	80 68       	ori	r24, 0x80	; 128
     14e:	8c 93       	st	X, r24
	sei();				// odblokowanie globalne przerwañ
     150:	78 94       	sei
	unsigned char data;
	TWI_init_slave();
     152:	0e 94 c1 02 	call	0x582	; 0x582 <TWI_init_slave>

	while(1)
	{
		//data = TWI_read_slave();
		//if(data == "255") pwm1G = 255;
		pwm1R=255;
     156:	8f ef       	ldi	r24, 0xFF	; 255
     158:	80 93 6f 00 	sts	0x006F, r24
		pwm2B=255;
     15c:	8f ef       	ldi	r24, 0xFF	; 255
     15e:	80 93 6b 00 	sts	0x006B, r24
		pwm1B=0;
     162:	10 92 6d 00 	sts	0x006D, r1
		pwm2R=0;
     166:	10 92 74 00 	sts	0x0074, r1
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	a0 e4       	ldi	r26, 0x40	; 64
     170:	b0 e4       	ldi	r27, 0x40	; 64
     172:	89 8f       	std	Y+25, r24	; 0x19
     174:	9a 8f       	std	Y+26, r25	; 0x1a
     176:	ab 8f       	std	Y+27, r26	; 0x1b
     178:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     17a:	69 8d       	ldd	r22, Y+25	; 0x19
     17c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     17e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     180:	9c 8d       	ldd	r25, Y+28	; 0x1c
     182:	20 e0       	ldi	r18, 0x00	; 0
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	4a ef       	ldi	r20, 0xFA	; 250
     188:	54 e4       	ldi	r21, 0x44	; 68
     18a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
     18e:	dc 01       	movw	r26, r24
     190:	cb 01       	movw	r24, r22
     192:	8d 8b       	std	Y+21, r24	; 0x15
     194:	9e 8b       	std	Y+22, r25	; 0x16
     196:	af 8b       	std	Y+23, r26	; 0x17
     198:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     19a:	6d 89       	ldd	r22, Y+21	; 0x15
     19c:	7e 89       	ldd	r23, Y+22	; 0x16
     19e:	8f 89       	ldd	r24, Y+23	; 0x17
     1a0:	98 8d       	ldd	r25, Y+24	; 0x18
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	40 e8       	ldi	r20, 0x80	; 128
     1a8:	5f e3       	ldi	r21, 0x3F	; 63
     1aa:	0e 94 3b 06 	call	0xc76	; 0xc76 <__ltsf2>
     1ae:	88 23       	and	r24, r24
     1b0:	2c f4       	brge	.+10     	; 0x1bc <main+0x12a>
		__ticks = 1;
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	9c 8b       	std	Y+20, r25	; 0x14
     1b8:	8b 8b       	std	Y+19, r24	; 0x13
     1ba:	3f c0       	rjmp	.+126    	; 0x23a <main+0x1a8>
	else if (__tmp > 65535)
     1bc:	6d 89       	ldd	r22, Y+21	; 0x15
     1be:	7e 89       	ldd	r23, Y+22	; 0x16
     1c0:	8f 89       	ldd	r24, Y+23	; 0x17
     1c2:	98 8d       	ldd	r25, Y+24	; 0x18
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	3f ef       	ldi	r19, 0xFF	; 255
     1c8:	4f e7       	ldi	r20, 0x7F	; 127
     1ca:	57 e4       	ldi	r21, 0x47	; 71
     1cc:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__gtsf2>
     1d0:	18 16       	cp	r1, r24
     1d2:	4c f5       	brge	.+82     	; 0x226 <main+0x194>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1d4:	69 8d       	ldd	r22, Y+25	; 0x19
     1d6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     1d8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     1da:	9c 8d       	ldd	r25, Y+28	; 0x1c
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	40 e2       	ldi	r20, 0x20	; 32
     1e2:	51 e4       	ldi	r21, 0x41	; 65
     1e4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
     1e8:	dc 01       	movw	r26, r24
     1ea:	cb 01       	movw	r24, r22
     1ec:	bc 01       	movw	r22, r24
     1ee:	cd 01       	movw	r24, r26
     1f0:	0e 94 0b 03 	call	0x616	; 0x616 <__fixunssfsi>
     1f4:	dc 01       	movw	r26, r24
     1f6:	cb 01       	movw	r24, r22
     1f8:	9c 8b       	std	Y+20, r25	; 0x14
     1fa:	8b 8b       	std	Y+19, r24	; 0x13
     1fc:	0f c0       	rjmp	.+30     	; 0x21c <main+0x18a>
     1fe:	88 ec       	ldi	r24, 0xC8	; 200
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	9a 8b       	std	Y+18, r25	; 0x12
     204:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     206:	89 89       	ldd	r24, Y+17	; 0x11
     208:	9a 89       	ldd	r25, Y+18	; 0x12
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	f1 f7       	brne	.-4      	; 0x20a <main+0x178>
     20e:	9a 8b       	std	Y+18, r25	; 0x12
     210:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     212:	8b 89       	ldd	r24, Y+19	; 0x13
     214:	9c 89       	ldd	r25, Y+20	; 0x14
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	9c 8b       	std	Y+20, r25	; 0x14
     21a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     21c:	8b 89       	ldd	r24, Y+19	; 0x13
     21e:	9c 89       	ldd	r25, Y+20	; 0x14
     220:	00 97       	sbiw	r24, 0x00	; 0
     222:	69 f7       	brne	.-38     	; 0x1fe <main+0x16c>
     224:	14 c0       	rjmp	.+40     	; 0x24e <main+0x1bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     226:	6d 89       	ldd	r22, Y+21	; 0x15
     228:	7e 89       	ldd	r23, Y+22	; 0x16
     22a:	8f 89       	ldd	r24, Y+23	; 0x17
     22c:	98 8d       	ldd	r25, Y+24	; 0x18
     22e:	0e 94 0b 03 	call	0x616	; 0x616 <__fixunssfsi>
     232:	dc 01       	movw	r26, r24
     234:	cb 01       	movw	r24, r22
     236:	9c 8b       	std	Y+20, r25	; 0x14
     238:	8b 8b       	std	Y+19, r24	; 0x13
     23a:	8b 89       	ldd	r24, Y+19	; 0x13
     23c:	9c 89       	ldd	r25, Y+20	; 0x14
     23e:	98 8b       	std	Y+16, r25	; 0x10
     240:	8f 87       	std	Y+15, r24	; 0x0f
     242:	8f 85       	ldd	r24, Y+15	; 0x0f
     244:	98 89       	ldd	r25, Y+16	; 0x10
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	f1 f7       	brne	.-4      	; 0x246 <main+0x1b4>
     24a:	98 8b       	std	Y+16, r25	; 0x10
     24c:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(3);
		pwm1R=0;
     24e:	10 92 6f 00 	sts	0x006F, r1
		pwm2B=0;
     252:	10 92 6b 00 	sts	0x006B, r1
		pwm1B=255;
     256:	8f ef       	ldi	r24, 0xFF	; 255
     258:	80 93 6d 00 	sts	0x006D, r24
		pwm2R=255;
     25c:	8f ef       	ldi	r24, 0xFF	; 255
     25e:	80 93 74 00 	sts	0x0074, r24
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	a0 e4       	ldi	r26, 0x40	; 64
     268:	b0 e4       	ldi	r27, 0x40	; 64
     26a:	8b 87       	std	Y+11, r24	; 0x0b
     26c:	9c 87       	std	Y+12, r25	; 0x0c
     26e:	ad 87       	std	Y+13, r26	; 0x0d
     270:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     272:	6b 85       	ldd	r22, Y+11	; 0x0b
     274:	7c 85       	ldd	r23, Y+12	; 0x0c
     276:	8d 85       	ldd	r24, Y+13	; 0x0d
     278:	9e 85       	ldd	r25, Y+14	; 0x0e
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	4a ef       	ldi	r20, 0xFA	; 250
     280:	54 e4       	ldi	r21, 0x44	; 68
     282:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
     286:	dc 01       	movw	r26, r24
     288:	cb 01       	movw	r24, r22
     28a:	8f 83       	std	Y+7, r24	; 0x07
     28c:	98 87       	std	Y+8, r25	; 0x08
     28e:	a9 87       	std	Y+9, r26	; 0x09
     290:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     292:	6f 81       	ldd	r22, Y+7	; 0x07
     294:	78 85       	ldd	r23, Y+8	; 0x08
     296:	89 85       	ldd	r24, Y+9	; 0x09
     298:	9a 85       	ldd	r25, Y+10	; 0x0a
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	40 e8       	ldi	r20, 0x80	; 128
     2a0:	5f e3       	ldi	r21, 0x3F	; 63
     2a2:	0e 94 3b 06 	call	0xc76	; 0xc76 <__ltsf2>
     2a6:	88 23       	and	r24, r24
     2a8:	2c f4       	brge	.+10     	; 0x2b4 <main+0x222>
		__ticks = 1;
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	9e 83       	std	Y+6, r25	; 0x06
     2b0:	8d 83       	std	Y+5, r24	; 0x05
     2b2:	3f c0       	rjmp	.+126    	; 0x332 <main+0x2a0>
	else if (__tmp > 65535)
     2b4:	6f 81       	ldd	r22, Y+7	; 0x07
     2b6:	78 85       	ldd	r23, Y+8	; 0x08
     2b8:	89 85       	ldd	r24, Y+9	; 0x09
     2ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     2bc:	20 e0       	ldi	r18, 0x00	; 0
     2be:	3f ef       	ldi	r19, 0xFF	; 255
     2c0:	4f e7       	ldi	r20, 0x7F	; 127
     2c2:	57 e4       	ldi	r21, 0x47	; 71
     2c4:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__gtsf2>
     2c8:	18 16       	cp	r1, r24
     2ca:	4c f5       	brge	.+82     	; 0x31e <main+0x28c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2cc:	6b 85       	ldd	r22, Y+11	; 0x0b
     2ce:	7c 85       	ldd	r23, Y+12	; 0x0c
     2d0:	8d 85       	ldd	r24, Y+13	; 0x0d
     2d2:	9e 85       	ldd	r25, Y+14	; 0x0e
     2d4:	20 e0       	ldi	r18, 0x00	; 0
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	40 e2       	ldi	r20, 0x20	; 32
     2da:	51 e4       	ldi	r21, 0x41	; 65
     2dc:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3>
     2e0:	dc 01       	movw	r26, r24
     2e2:	cb 01       	movw	r24, r22
     2e4:	bc 01       	movw	r22, r24
     2e6:	cd 01       	movw	r24, r26
     2e8:	0e 94 0b 03 	call	0x616	; 0x616 <__fixunssfsi>
     2ec:	dc 01       	movw	r26, r24
     2ee:	cb 01       	movw	r24, r22
     2f0:	9e 83       	std	Y+6, r25	; 0x06
     2f2:	8d 83       	std	Y+5, r24	; 0x05
     2f4:	0f c0       	rjmp	.+30     	; 0x314 <main+0x282>
     2f6:	88 ec       	ldi	r24, 0xC8	; 200
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	9c 83       	std	Y+4, r25	; 0x04
     2fc:	8b 83       	std	Y+3, r24	; 0x03
     2fe:	8b 81       	ldd	r24, Y+3	; 0x03
     300:	9c 81       	ldd	r25, Y+4	; 0x04
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <main+0x270>
     306:	9c 83       	std	Y+4, r25	; 0x04
     308:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     30a:	8d 81       	ldd	r24, Y+5	; 0x05
     30c:	9e 81       	ldd	r25, Y+6	; 0x06
     30e:	01 97       	sbiw	r24, 0x01	; 1
     310:	9e 83       	std	Y+6, r25	; 0x06
     312:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     314:	8d 81       	ldd	r24, Y+5	; 0x05
     316:	9e 81       	ldd	r25, Y+6	; 0x06
     318:	00 97       	sbiw	r24, 0x00	; 0
     31a:	69 f7       	brne	.-38     	; 0x2f6 <main+0x264>
     31c:	1c cf       	rjmp	.-456    	; 0x156 <main+0xc4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     31e:	6f 81       	ldd	r22, Y+7	; 0x07
     320:	78 85       	ldd	r23, Y+8	; 0x08
     322:	89 85       	ldd	r24, Y+9	; 0x09
     324:	9a 85       	ldd	r25, Y+10	; 0x0a
     326:	0e 94 0b 03 	call	0x616	; 0x616 <__fixunssfsi>
     32a:	dc 01       	movw	r26, r24
     32c:	cb 01       	movw	r24, r22
     32e:	9e 83       	std	Y+6, r25	; 0x06
     330:	8d 83       	std	Y+5, r24	; 0x05
     332:	8d 81       	ldd	r24, Y+5	; 0x05
     334:	9e 81       	ldd	r25, Y+6	; 0x06
     336:	9a 83       	std	Y+2, r25	; 0x02
     338:	89 83       	std	Y+1, r24	; 0x01
     33a:	89 81       	ldd	r24, Y+1	; 0x01
     33c:	9a 81       	ldd	r25, Y+2	; 0x02
     33e:	01 97       	sbiw	r24, 0x01	; 1
     340:	f1 f7       	brne	.-4      	; 0x33e <main+0x2ac>
     342:	9a 83       	std	Y+2, r25	; 0x02
     344:	89 83       	std	Y+1, r24	; 0x01
     346:	07 cf       	rjmp	.-498    	; 0x156 <main+0xc4>

00000348 <__vector_4>:

}

// cia³o procedury obs³ugi przerwania Compare Match Timera2
ISR( TIMER2_COMP_vect )
{
     348:	1f 92       	push	r1
     34a:	0f 92       	push	r0
     34c:	0f b6       	in	r0, 0x3f	; 63
     34e:	0f 92       	push	r0
     350:	11 24       	eor	r1, r1
     352:	8f 93       	push	r24
     354:	9f 93       	push	r25
     356:	af 93       	push	r26
     358:	bf 93       	push	r27
     35a:	ef 93       	push	r30
     35c:	ff 93       	push	r31
     35e:	df 93       	push	r29
     360:	cf 93       	push	r28
     362:	cd b7       	in	r28, 0x3d	; 61
     364:	de b7       	in	r29, 0x3e	; 62
	static uint8_t cnt; 
	if(cnt>=pwm1R) PORTD |= (1<<PD0); else PORTD &= ~(1<<PD0);
     366:	90 91 68 00 	lds	r25, 0x0068
     36a:	80 91 6f 00 	lds	r24, 0x006F
     36e:	98 17       	cp	r25, r24
     370:	40 f0       	brcs	.+16     	; 0x382 <__vector_4+0x3a>
     372:	a2 e3       	ldi	r26, 0x32	; 50
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	e2 e3       	ldi	r30, 0x32	; 50
     378:	f0 e0       	ldi	r31, 0x00	; 0
     37a:	80 81       	ld	r24, Z
     37c:	81 60       	ori	r24, 0x01	; 1
     37e:	8c 93       	st	X, r24
     380:	07 c0       	rjmp	.+14     	; 0x390 <__vector_4+0x48>
     382:	a2 e3       	ldi	r26, 0x32	; 50
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e2 e3       	ldi	r30, 0x32	; 50
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	8e 7f       	andi	r24, 0xFE	; 254
     38e:	8c 93       	st	X, r24
	if(cnt>=pwm1G) PORTD |= (1<<PD1); else PORTD &= ~(1<<PD1);
     390:	90 91 68 00 	lds	r25, 0x0068
     394:	80 91 6a 00 	lds	r24, 0x006A
     398:	98 17       	cp	r25, r24
     39a:	40 f0       	brcs	.+16     	; 0x3ac <__vector_4+0x64>
     39c:	a2 e3       	ldi	r26, 0x32	; 50
     39e:	b0 e0       	ldi	r27, 0x00	; 0
     3a0:	e2 e3       	ldi	r30, 0x32	; 50
     3a2:	f0 e0       	ldi	r31, 0x00	; 0
     3a4:	80 81       	ld	r24, Z
     3a6:	82 60       	ori	r24, 0x02	; 2
     3a8:	8c 93       	st	X, r24
     3aa:	07 c0       	rjmp	.+14     	; 0x3ba <__vector_4+0x72>
     3ac:	a2 e3       	ldi	r26, 0x32	; 50
     3ae:	b0 e0       	ldi	r27, 0x00	; 0
     3b0:	e2 e3       	ldi	r30, 0x32	; 50
     3b2:	f0 e0       	ldi	r31, 0x00	; 0
     3b4:	80 81       	ld	r24, Z
     3b6:	8d 7f       	andi	r24, 0xFD	; 253
     3b8:	8c 93       	st	X, r24
	if(cnt>=pwm1B) PORTD |= (1<<PD2); else PORTD &= ~(1<<PD2);
     3ba:	90 91 68 00 	lds	r25, 0x0068
     3be:	80 91 6d 00 	lds	r24, 0x006D
     3c2:	98 17       	cp	r25, r24
     3c4:	40 f0       	brcs	.+16     	; 0x3d6 <__vector_4+0x8e>
     3c6:	a2 e3       	ldi	r26, 0x32	; 50
     3c8:	b0 e0       	ldi	r27, 0x00	; 0
     3ca:	e2 e3       	ldi	r30, 0x32	; 50
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	80 81       	ld	r24, Z
     3d0:	84 60       	ori	r24, 0x04	; 4
     3d2:	8c 93       	st	X, r24
     3d4:	07 c0       	rjmp	.+14     	; 0x3e4 <__vector_4+0x9c>
     3d6:	a2 e3       	ldi	r26, 0x32	; 50
     3d8:	b0 e0       	ldi	r27, 0x00	; 0
     3da:	e2 e3       	ldi	r30, 0x32	; 50
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	80 81       	ld	r24, Z
     3e0:	8b 7f       	andi	r24, 0xFB	; 251
     3e2:	8c 93       	st	X, r24
	if(cnt>=pwm2R) PORTD |= (1<<PD3); else PORTD &= ~(1<<PD3);
     3e4:	90 91 68 00 	lds	r25, 0x0068
     3e8:	80 91 74 00 	lds	r24, 0x0074
     3ec:	98 17       	cp	r25, r24
     3ee:	40 f0       	brcs	.+16     	; 0x400 <__vector_4+0xb8>
     3f0:	a2 e3       	ldi	r26, 0x32	; 50
     3f2:	b0 e0       	ldi	r27, 0x00	; 0
     3f4:	e2 e3       	ldi	r30, 0x32	; 50
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	80 81       	ld	r24, Z
     3fa:	88 60       	ori	r24, 0x08	; 8
     3fc:	8c 93       	st	X, r24
     3fe:	07 c0       	rjmp	.+14     	; 0x40e <__vector_4+0xc6>
     400:	a2 e3       	ldi	r26, 0x32	; 50
     402:	b0 e0       	ldi	r27, 0x00	; 0
     404:	e2 e3       	ldi	r30, 0x32	; 50
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	80 81       	ld	r24, Z
     40a:	87 7f       	andi	r24, 0xF7	; 247
     40c:	8c 93       	st	X, r24
	if(cnt>=pwm2G) PORTD |= (1<<PD4); else PORTD &= ~(1<<PD4);
     40e:	90 91 68 00 	lds	r25, 0x0068
     412:	80 91 70 00 	lds	r24, 0x0070
     416:	98 17       	cp	r25, r24
     418:	40 f0       	brcs	.+16     	; 0x42a <__vector_4+0xe2>
     41a:	a2 e3       	ldi	r26, 0x32	; 50
     41c:	b0 e0       	ldi	r27, 0x00	; 0
     41e:	e2 e3       	ldi	r30, 0x32	; 50
     420:	f0 e0       	ldi	r31, 0x00	; 0
     422:	80 81       	ld	r24, Z
     424:	80 61       	ori	r24, 0x10	; 16
     426:	8c 93       	st	X, r24
     428:	07 c0       	rjmp	.+14     	; 0x438 <__vector_4+0xf0>
     42a:	a2 e3       	ldi	r26, 0x32	; 50
     42c:	b0 e0       	ldi	r27, 0x00	; 0
     42e:	e2 e3       	ldi	r30, 0x32	; 50
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	80 81       	ld	r24, Z
     434:	8f 7e       	andi	r24, 0xEF	; 239
     436:	8c 93       	st	X, r24
	if(cnt>=pwm2B) PORTD |= (1<<PD5); else PORTD &= ~(1<<PD5);
     438:	90 91 68 00 	lds	r25, 0x0068
     43c:	80 91 6b 00 	lds	r24, 0x006B
     440:	98 17       	cp	r25, r24
     442:	40 f0       	brcs	.+16     	; 0x454 <__vector_4+0x10c>
     444:	a2 e3       	ldi	r26, 0x32	; 50
     446:	b0 e0       	ldi	r27, 0x00	; 0
     448:	e2 e3       	ldi	r30, 0x32	; 50
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	80 81       	ld	r24, Z
     44e:	80 62       	ori	r24, 0x20	; 32
     450:	8c 93       	st	X, r24
     452:	07 c0       	rjmp	.+14     	; 0x462 <__vector_4+0x11a>
     454:	a2 e3       	ldi	r26, 0x32	; 50
     456:	b0 e0       	ldi	r27, 0x00	; 0
     458:	e2 e3       	ldi	r30, 0x32	; 50
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	8f 7d       	andi	r24, 0xDF	; 223
     460:	8c 93       	st	X, r24
	if(cnt>=pwm3R) PORTC |= (1<<PC2); else PORTC &= ~(1<<PC2);
     462:	90 91 68 00 	lds	r25, 0x0068
     466:	80 91 6c 00 	lds	r24, 0x006C
     46a:	98 17       	cp	r25, r24
     46c:	40 f0       	brcs	.+16     	; 0x47e <__vector_4+0x136>
     46e:	a5 e3       	ldi	r26, 0x35	; 53
     470:	b0 e0       	ldi	r27, 0x00	; 0
     472:	e5 e3       	ldi	r30, 0x35	; 53
     474:	f0 e0       	ldi	r31, 0x00	; 0
     476:	80 81       	ld	r24, Z
     478:	84 60       	ori	r24, 0x04	; 4
     47a:	8c 93       	st	X, r24
     47c:	07 c0       	rjmp	.+14     	; 0x48c <__vector_4+0x144>
     47e:	a5 e3       	ldi	r26, 0x35	; 53
     480:	b0 e0       	ldi	r27, 0x00	; 0
     482:	e5 e3       	ldi	r30, 0x35	; 53
     484:	f0 e0       	ldi	r31, 0x00	; 0
     486:	80 81       	ld	r24, Z
     488:	8b 7f       	andi	r24, 0xFB	; 251
     48a:	8c 93       	st	X, r24
	if(cnt>=pwm3G) PORTC |= (1<<PC3); else PORTC &= ~(1<<PC3);
     48c:	90 91 68 00 	lds	r25, 0x0068
     490:	80 91 73 00 	lds	r24, 0x0073
     494:	98 17       	cp	r25, r24
     496:	40 f0       	brcs	.+16     	; 0x4a8 <__vector_4+0x160>
     498:	a5 e3       	ldi	r26, 0x35	; 53
     49a:	b0 e0       	ldi	r27, 0x00	; 0
     49c:	e5 e3       	ldi	r30, 0x35	; 53
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	80 81       	ld	r24, Z
     4a2:	88 60       	ori	r24, 0x08	; 8
     4a4:	8c 93       	st	X, r24
     4a6:	07 c0       	rjmp	.+14     	; 0x4b6 <__vector_4+0x16e>
     4a8:	a5 e3       	ldi	r26, 0x35	; 53
     4aa:	b0 e0       	ldi	r27, 0x00	; 0
     4ac:	e5 e3       	ldi	r30, 0x35	; 53
     4ae:	f0 e0       	ldi	r31, 0x00	; 0
     4b0:	80 81       	ld	r24, Z
     4b2:	87 7f       	andi	r24, 0xF7	; 247
     4b4:	8c 93       	st	X, r24
	if(cnt>=pwm3B) PORTC |= (1<<PC4); else PORTC &= ~(1<<PC4);
     4b6:	90 91 68 00 	lds	r25, 0x0068
     4ba:	80 91 6e 00 	lds	r24, 0x006E
     4be:	98 17       	cp	r25, r24
     4c0:	40 f0       	brcs	.+16     	; 0x4d2 <__vector_4+0x18a>
     4c2:	a5 e3       	ldi	r26, 0x35	; 53
     4c4:	b0 e0       	ldi	r27, 0x00	; 0
     4c6:	e5 e3       	ldi	r30, 0x35	; 53
     4c8:	f0 e0       	ldi	r31, 0x00	; 0
     4ca:	80 81       	ld	r24, Z
     4cc:	80 61       	ori	r24, 0x10	; 16
     4ce:	8c 93       	st	X, r24
     4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <__vector_4+0x198>
     4d2:	a5 e3       	ldi	r26, 0x35	; 53
     4d4:	b0 e0       	ldi	r27, 0x00	; 0
     4d6:	e5 e3       	ldi	r30, 0x35	; 53
     4d8:	f0 e0       	ldi	r31, 0x00	; 0
     4da:	80 81       	ld	r24, Z
     4dc:	8f 7e       	andi	r24, 0xEF	; 239
     4de:	8c 93       	st	X, r24
	if(cnt>=pwm4R) PORTC |= (1<<PC5); else PORTC &= ~(1<<PC5);
     4e0:	90 91 68 00 	lds	r25, 0x0068
     4e4:	80 91 71 00 	lds	r24, 0x0071
     4e8:	98 17       	cp	r25, r24
     4ea:	40 f0       	brcs	.+16     	; 0x4fc <__vector_4+0x1b4>
     4ec:	a5 e3       	ldi	r26, 0x35	; 53
     4ee:	b0 e0       	ldi	r27, 0x00	; 0
     4f0:	e5 e3       	ldi	r30, 0x35	; 53
     4f2:	f0 e0       	ldi	r31, 0x00	; 0
     4f4:	80 81       	ld	r24, Z
     4f6:	80 62       	ori	r24, 0x20	; 32
     4f8:	8c 93       	st	X, r24
     4fa:	07 c0       	rjmp	.+14     	; 0x50a <__vector_4+0x1c2>
     4fc:	a5 e3       	ldi	r26, 0x35	; 53
     4fe:	b0 e0       	ldi	r27, 0x00	; 0
     500:	e5 e3       	ldi	r30, 0x35	; 53
     502:	f0 e0       	ldi	r31, 0x00	; 0
     504:	80 81       	ld	r24, Z
     506:	8f 7d       	andi	r24, 0xDF	; 223
     508:	8c 93       	st	X, r24
	if(cnt>=pwm4G) PORTC |= (1<<PC6); else PORTC &= ~(1<<PC6);
     50a:	90 91 68 00 	lds	r25, 0x0068
     50e:	80 91 72 00 	lds	r24, 0x0072
     512:	98 17       	cp	r25, r24
     514:	40 f0       	brcs	.+16     	; 0x526 <__vector_4+0x1de>
     516:	a5 e3       	ldi	r26, 0x35	; 53
     518:	b0 e0       	ldi	r27, 0x00	; 0
     51a:	e5 e3       	ldi	r30, 0x35	; 53
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	80 81       	ld	r24, Z
     520:	80 64       	ori	r24, 0x40	; 64
     522:	8c 93       	st	X, r24
     524:	07 c0       	rjmp	.+14     	; 0x534 <__vector_4+0x1ec>
     526:	a5 e3       	ldi	r26, 0x35	; 53
     528:	b0 e0       	ldi	r27, 0x00	; 0
     52a:	e5 e3       	ldi	r30, 0x35	; 53
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	80 81       	ld	r24, Z
     530:	8f 7b       	andi	r24, 0xBF	; 191
     532:	8c 93       	st	X, r24
	if(cnt>=pwm4B) PORTC |= (1<<PC7); else PORTC &= ~(1<<PC7);
     534:	90 91 68 00 	lds	r25, 0x0068
     538:	80 91 69 00 	lds	r24, 0x0069
     53c:	98 17       	cp	r25, r24
     53e:	40 f0       	brcs	.+16     	; 0x550 <__vector_4+0x208>
     540:	a5 e3       	ldi	r26, 0x35	; 53
     542:	b0 e0       	ldi	r27, 0x00	; 0
     544:	e5 e3       	ldi	r30, 0x35	; 53
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	80 81       	ld	r24, Z
     54a:	80 68       	ori	r24, 0x80	; 128
     54c:	8c 93       	st	X, r24
     54e:	07 c0       	rjmp	.+14     	; 0x55e <__vector_4+0x216>
     550:	a5 e3       	ldi	r26, 0x35	; 53
     552:	b0 e0       	ldi	r27, 0x00	; 0
     554:	e5 e3       	ldi	r30, 0x35	; 53
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	80 81       	ld	r24, Z
     55a:	8f 77       	andi	r24, 0x7F	; 127
     55c:	8c 93       	st	X, r24
	cnt++;	
     55e:	80 91 68 00 	lds	r24, 0x0068
     562:	8f 5f       	subi	r24, 0xFF	; 255
     564:	80 93 68 00 	sts	0x0068, r24
}
     568:	cf 91       	pop	r28
     56a:	df 91       	pop	r29
     56c:	ff 91       	pop	r31
     56e:	ef 91       	pop	r30
     570:	bf 91       	pop	r27
     572:	af 91       	pop	r26
     574:	9f 91       	pop	r25
     576:	8f 91       	pop	r24
     578:	0f 90       	pop	r0
     57a:	0f be       	out	0x3f, r0	; 63
     57c:	0f 90       	pop	r0
     57e:	1f 90       	pop	r1
     580:	18 95       	reti

00000582 <TWI_init_slave>:

void TWI_init_slave(void) // Function to initilaize slave
{
     582:	df 93       	push	r29
     584:	cf 93       	push	r28
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
    TWAR=0x20;    // Fill slave address to TWAR
     58a:	e2 e2       	ldi	r30, 0x22	; 34
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	80 e2       	ldi	r24, 0x20	; 32
     590:	80 83       	st	Z, r24
} 
     592:	cf 91       	pop	r28
     594:	df 91       	pop	r29
     596:	08 95       	ret

00000598 <TWI_match_read_slave>:

void TWI_match_read_slave(void) //Function to match the slave address and slave dirction bit(read)
{
     598:	df 93       	push	r29
     59a:	cf 93       	push	r28
     59c:	cd b7       	in	r28, 0x3d	; 61
     59e:	de b7       	in	r29, 0x3e	; 62
     5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <TWI_match_read_slave+0x1c>
    while((TWSR & 0xF8)!= 0x60)  // Loop till correct acknoledgement have been received
    {
        // Get acknowlegement, Enable TWI, Clear TWI interrupt flag
        TWCR=(1<<TWEA)|(1<<TWEN)|(1<<TWINT);    
     5a2:	e6 e5       	ldi	r30, 0x56	; 86
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	84 ec       	ldi	r24, 0xC4	; 196
     5a8:	80 83       	st	Z, r24
        while (!(TWCR & (1<<TWINT)));  // Wait for TWINT flag
     5aa:	e6 e5       	ldi	r30, 0x56	; 86
     5ac:	f0 e0       	ldi	r31, 0x00	; 0
     5ae:	80 81       	ld	r24, Z
     5b0:	88 23       	and	r24, r24
     5b2:	dc f7       	brge	.-10     	; 0x5aa <TWI_match_read_slave+0x12>
    TWAR=0x20;    // Fill slave address to TWAR
} 

void TWI_match_read_slave(void) //Function to match the slave address and slave dirction bit(read)
{
    while((TWSR & 0xF8)!= 0x60)  // Loop till correct acknoledgement have been received
     5b4:	e1 e2       	ldi	r30, 0x21	; 33
     5b6:	f0 e0       	ldi	r31, 0x00	; 0
     5b8:	80 81       	ld	r24, Z
     5ba:	88 2f       	mov	r24, r24
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	88 7f       	andi	r24, 0xF8	; 248
     5c0:	90 70       	andi	r25, 0x00	; 0
     5c2:	80 36       	cpi	r24, 0x60	; 96
     5c4:	91 05       	cpc	r25, r1
     5c6:	69 f7       	brne	.-38     	; 0x5a2 <TWI_match_read_slave+0xa>
    {
        // Get acknowlegement, Enable TWI, Clear TWI interrupt flag
        TWCR=(1<<TWEA)|(1<<TWEN)|(1<<TWINT);    
        while (!(TWCR & (1<<TWINT)));  // Wait for TWINT flag
    }
} 
     5c8:	cf 91       	pop	r28
     5ca:	df 91       	pop	r29
     5cc:	08 95       	ret

000005ce <TWI_read_slave>:

void TWI_read_slave(void)
{
     5ce:	df 93       	push	r29
     5d0:	cf 93       	push	r28
     5d2:	0f 92       	push	r0
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
	unsigned char recv_data;
    // Clear TWI interrupt flag,Get acknowlegement, Enable TWI
    TWCR= (1<<TWINT)|(1<<TWEA)|(1<<TWEN);    
     5d8:	e6 e5       	ldi	r30, 0x56	; 86
     5da:	f0 e0       	ldi	r31, 0x00	; 0
     5dc:	84 ec       	ldi	r24, 0xC4	; 196
     5de:	80 83       	st	Z, r24
    while (!(TWCR & (1<<TWINT)));    // Wait for TWINT flag
     5e0:	e6 e5       	ldi	r30, 0x56	; 86
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	80 81       	ld	r24, Z
     5e6:	88 23       	and	r24, r24
     5e8:	dc f7       	brge	.-10     	; 0x5e0 <TWI_read_slave+0x12>
    while((TWSR & 0xF8)!=0x80);        // Wait for acknowledgement
     5ea:	e1 e2       	ldi	r30, 0x21	; 33
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	80 81       	ld	r24, Z
     5f0:	88 2f       	mov	r24, r24
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	88 7f       	andi	r24, 0xF8	; 248
     5f6:	90 70       	andi	r25, 0x00	; 0
     5f8:	80 38       	cpi	r24, 0x80	; 128
     5fa:	91 05       	cpc	r25, r1
     5fc:	b1 f7       	brne	.-20     	; 0x5ea <TWI_read_slave+0x1c>
    recv_data=TWDR;                    // Get value from TWDR
     5fe:	e3 e2       	ldi	r30, 0x23	; 35
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	80 81       	ld	r24, Z
     604:	89 83       	std	Y+1, r24	; 0x01
    PORTB=recv_data;                // send the receive value on PORTB
     606:	e8 e3       	ldi	r30, 0x38	; 56
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	89 81       	ldd	r24, Y+1	; 0x01
     60c:	80 83       	st	Z, r24
}
     60e:	0f 90       	pop	r0
     610:	cf 91       	pop	r28
     612:	df 91       	pop	r29
     614:	08 95       	ret

00000616 <__fixunssfsi>:
     616:	ef 92       	push	r14
     618:	ff 92       	push	r15
     61a:	0f 93       	push	r16
     61c:	1f 93       	push	r17
     61e:	7b 01       	movw	r14, r22
     620:	8c 01       	movw	r16, r24
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	5f e4       	ldi	r21, 0x4F	; 79
     62a:	0e 94 0b 06 	call	0xc16	; 0xc16 <__gesf2>
     62e:	88 23       	and	r24, r24
     630:	8c f0       	brlt	.+34     	; 0x654 <__fixunssfsi+0x3e>
     632:	c8 01       	movw	r24, r16
     634:	b7 01       	movw	r22, r14
     636:	20 e0       	ldi	r18, 0x00	; 0
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	40 e0       	ldi	r20, 0x00	; 0
     63c:	5f e4       	ldi	r21, 0x4F	; 79
     63e:	0e 94 83 04 	call	0x906	; 0x906 <__subsf3>
     642:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__fixsfsi>
     646:	9b 01       	movw	r18, r22
     648:	ac 01       	movw	r20, r24
     64a:	20 50       	subi	r18, 0x00	; 0
     64c:	30 40       	sbci	r19, 0x00	; 0
     64e:	40 40       	sbci	r20, 0x00	; 0
     650:	50 48       	sbci	r21, 0x80	; 128
     652:	06 c0       	rjmp	.+12     	; 0x660 <__fixunssfsi+0x4a>
     654:	c8 01       	movw	r24, r16
     656:	b7 01       	movw	r22, r14
     658:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__fixsfsi>
     65c:	9b 01       	movw	r18, r22
     65e:	ac 01       	movw	r20, r24
     660:	b9 01       	movw	r22, r18
     662:	ca 01       	movw	r24, r20
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	ff 90       	pop	r15
     66a:	ef 90       	pop	r14
     66c:	08 95       	ret

0000066e <_fpadd_parts>:
     66e:	a0 e0       	ldi	r26, 0x00	; 0
     670:	b0 e0       	ldi	r27, 0x00	; 0
     672:	ed e3       	ldi	r30, 0x3D	; 61
     674:	f3 e0       	ldi	r31, 0x03	; 3
     676:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__prologue_saves__>
     67a:	dc 01       	movw	r26, r24
     67c:	2b 01       	movw	r4, r22
     67e:	fa 01       	movw	r30, r20
     680:	9c 91       	ld	r25, X
     682:	92 30       	cpi	r25, 0x02	; 2
     684:	08 f4       	brcc	.+2      	; 0x688 <_fpadd_parts+0x1a>
     686:	39 c1       	rjmp	.+626    	; 0x8fa <__stack+0x9b>
     688:	eb 01       	movw	r28, r22
     68a:	88 81       	ld	r24, Y
     68c:	82 30       	cpi	r24, 0x02	; 2
     68e:	08 f4       	brcc	.+2      	; 0x692 <_fpadd_parts+0x24>
     690:	33 c1       	rjmp	.+614    	; 0x8f8 <__stack+0x99>
     692:	94 30       	cpi	r25, 0x04	; 4
     694:	69 f4       	brne	.+26     	; 0x6b0 <_fpadd_parts+0x42>
     696:	84 30       	cpi	r24, 0x04	; 4
     698:	09 f0       	breq	.+2      	; 0x69c <_fpadd_parts+0x2e>
     69a:	2f c1       	rjmp	.+606    	; 0x8fa <__stack+0x9b>
     69c:	11 96       	adiw	r26, 0x01	; 1
     69e:	9c 91       	ld	r25, X
     6a0:	11 97       	sbiw	r26, 0x01	; 1
     6a2:	89 81       	ldd	r24, Y+1	; 0x01
     6a4:	98 17       	cp	r25, r24
     6a6:	09 f4       	brne	.+2      	; 0x6aa <_fpadd_parts+0x3c>
     6a8:	28 c1       	rjmp	.+592    	; 0x8fa <__stack+0x9b>
     6aa:	a0 e6       	ldi	r26, 0x60	; 96
     6ac:	b0 e0       	ldi	r27, 0x00	; 0
     6ae:	25 c1       	rjmp	.+586    	; 0x8fa <__stack+0x9b>
     6b0:	84 30       	cpi	r24, 0x04	; 4
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <_fpadd_parts+0x48>
     6b4:	21 c1       	rjmp	.+578    	; 0x8f8 <__stack+0x99>
     6b6:	82 30       	cpi	r24, 0x02	; 2
     6b8:	a9 f4       	brne	.+42     	; 0x6e4 <_fpadd_parts+0x76>
     6ba:	92 30       	cpi	r25, 0x02	; 2
     6bc:	09 f0       	breq	.+2      	; 0x6c0 <_fpadd_parts+0x52>
     6be:	1d c1       	rjmp	.+570    	; 0x8fa <__stack+0x9b>
     6c0:	9a 01       	movw	r18, r20
     6c2:	ad 01       	movw	r20, r26
     6c4:	88 e0       	ldi	r24, 0x08	; 8
     6c6:	ea 01       	movw	r28, r20
     6c8:	09 90       	ld	r0, Y+
     6ca:	ae 01       	movw	r20, r28
     6cc:	e9 01       	movw	r28, r18
     6ce:	09 92       	st	Y+, r0
     6d0:	9e 01       	movw	r18, r28
     6d2:	81 50       	subi	r24, 0x01	; 1
     6d4:	c1 f7       	brne	.-16     	; 0x6c6 <_fpadd_parts+0x58>
     6d6:	e2 01       	movw	r28, r4
     6d8:	89 81       	ldd	r24, Y+1	; 0x01
     6da:	11 96       	adiw	r26, 0x01	; 1
     6dc:	9c 91       	ld	r25, X
     6de:	89 23       	and	r24, r25
     6e0:	81 83       	std	Z+1, r24	; 0x01
     6e2:	08 c1       	rjmp	.+528    	; 0x8f4 <__stack+0x95>
     6e4:	92 30       	cpi	r25, 0x02	; 2
     6e6:	09 f4       	brne	.+2      	; 0x6ea <_fpadd_parts+0x7c>
     6e8:	07 c1       	rjmp	.+526    	; 0x8f8 <__stack+0x99>
     6ea:	12 96       	adiw	r26, 0x02	; 2
     6ec:	2d 90       	ld	r2, X+
     6ee:	3c 90       	ld	r3, X
     6f0:	13 97       	sbiw	r26, 0x03	; 3
     6f2:	eb 01       	movw	r28, r22
     6f4:	8a 81       	ldd	r24, Y+2	; 0x02
     6f6:	9b 81       	ldd	r25, Y+3	; 0x03
     6f8:	14 96       	adiw	r26, 0x04	; 4
     6fa:	ad 90       	ld	r10, X+
     6fc:	bd 90       	ld	r11, X+
     6fe:	cd 90       	ld	r12, X+
     700:	dc 90       	ld	r13, X
     702:	17 97       	sbiw	r26, 0x07	; 7
     704:	ec 80       	ldd	r14, Y+4	; 0x04
     706:	fd 80       	ldd	r15, Y+5	; 0x05
     708:	0e 81       	ldd	r16, Y+6	; 0x06
     70a:	1f 81       	ldd	r17, Y+7	; 0x07
     70c:	91 01       	movw	r18, r2
     70e:	28 1b       	sub	r18, r24
     710:	39 0b       	sbc	r19, r25
     712:	b9 01       	movw	r22, r18
     714:	37 ff       	sbrs	r19, 7
     716:	04 c0       	rjmp	.+8      	; 0x720 <_fpadd_parts+0xb2>
     718:	66 27       	eor	r22, r22
     71a:	77 27       	eor	r23, r23
     71c:	62 1b       	sub	r22, r18
     71e:	73 0b       	sbc	r23, r19
     720:	60 32       	cpi	r22, 0x20	; 32
     722:	71 05       	cpc	r23, r1
     724:	0c f0       	brlt	.+2      	; 0x728 <_fpadd_parts+0xba>
     726:	61 c0       	rjmp	.+194    	; 0x7ea <_fpadd_parts+0x17c>
     728:	12 16       	cp	r1, r18
     72a:	13 06       	cpc	r1, r19
     72c:	6c f5       	brge	.+90     	; 0x788 <_fpadd_parts+0x11a>
     72e:	37 01       	movw	r6, r14
     730:	48 01       	movw	r8, r16
     732:	06 2e       	mov	r0, r22
     734:	04 c0       	rjmp	.+8      	; 0x73e <_fpadd_parts+0xd0>
     736:	96 94       	lsr	r9
     738:	87 94       	ror	r8
     73a:	77 94       	ror	r7
     73c:	67 94       	ror	r6
     73e:	0a 94       	dec	r0
     740:	d2 f7       	brpl	.-12     	; 0x736 <_fpadd_parts+0xc8>
     742:	21 e0       	ldi	r18, 0x01	; 1
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	40 e0       	ldi	r20, 0x00	; 0
     748:	50 e0       	ldi	r21, 0x00	; 0
     74a:	04 c0       	rjmp	.+8      	; 0x754 <_fpadd_parts+0xe6>
     74c:	22 0f       	add	r18, r18
     74e:	33 1f       	adc	r19, r19
     750:	44 1f       	adc	r20, r20
     752:	55 1f       	adc	r21, r21
     754:	6a 95       	dec	r22
     756:	d2 f7       	brpl	.-12     	; 0x74c <_fpadd_parts+0xde>
     758:	21 50       	subi	r18, 0x01	; 1
     75a:	30 40       	sbci	r19, 0x00	; 0
     75c:	40 40       	sbci	r20, 0x00	; 0
     75e:	50 40       	sbci	r21, 0x00	; 0
     760:	2e 21       	and	r18, r14
     762:	3f 21       	and	r19, r15
     764:	40 23       	and	r20, r16
     766:	51 23       	and	r21, r17
     768:	21 15       	cp	r18, r1
     76a:	31 05       	cpc	r19, r1
     76c:	41 05       	cpc	r20, r1
     76e:	51 05       	cpc	r21, r1
     770:	21 f0       	breq	.+8      	; 0x77a <_fpadd_parts+0x10c>
     772:	21 e0       	ldi	r18, 0x01	; 1
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	79 01       	movw	r14, r18
     77c:	8a 01       	movw	r16, r20
     77e:	e6 28       	or	r14, r6
     780:	f7 28       	or	r15, r7
     782:	08 29       	or	r16, r8
     784:	19 29       	or	r17, r9
     786:	3c c0       	rjmp	.+120    	; 0x800 <_fpadd_parts+0x192>
     788:	23 2b       	or	r18, r19
     78a:	d1 f1       	breq	.+116    	; 0x800 <_fpadd_parts+0x192>
     78c:	26 0e       	add	r2, r22
     78e:	37 1e       	adc	r3, r23
     790:	35 01       	movw	r6, r10
     792:	46 01       	movw	r8, r12
     794:	06 2e       	mov	r0, r22
     796:	04 c0       	rjmp	.+8      	; 0x7a0 <_fpadd_parts+0x132>
     798:	96 94       	lsr	r9
     79a:	87 94       	ror	r8
     79c:	77 94       	ror	r7
     79e:	67 94       	ror	r6
     7a0:	0a 94       	dec	r0
     7a2:	d2 f7       	brpl	.-12     	; 0x798 <_fpadd_parts+0x12a>
     7a4:	21 e0       	ldi	r18, 0x01	; 1
     7a6:	30 e0       	ldi	r19, 0x00	; 0
     7a8:	40 e0       	ldi	r20, 0x00	; 0
     7aa:	50 e0       	ldi	r21, 0x00	; 0
     7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <_fpadd_parts+0x148>
     7ae:	22 0f       	add	r18, r18
     7b0:	33 1f       	adc	r19, r19
     7b2:	44 1f       	adc	r20, r20
     7b4:	55 1f       	adc	r21, r21
     7b6:	6a 95       	dec	r22
     7b8:	d2 f7       	brpl	.-12     	; 0x7ae <_fpadd_parts+0x140>
     7ba:	21 50       	subi	r18, 0x01	; 1
     7bc:	30 40       	sbci	r19, 0x00	; 0
     7be:	40 40       	sbci	r20, 0x00	; 0
     7c0:	50 40       	sbci	r21, 0x00	; 0
     7c2:	2a 21       	and	r18, r10
     7c4:	3b 21       	and	r19, r11
     7c6:	4c 21       	and	r20, r12
     7c8:	5d 21       	and	r21, r13
     7ca:	21 15       	cp	r18, r1
     7cc:	31 05       	cpc	r19, r1
     7ce:	41 05       	cpc	r20, r1
     7d0:	51 05       	cpc	r21, r1
     7d2:	21 f0       	breq	.+8      	; 0x7dc <_fpadd_parts+0x16e>
     7d4:	21 e0       	ldi	r18, 0x01	; 1
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	59 01       	movw	r10, r18
     7de:	6a 01       	movw	r12, r20
     7e0:	a6 28       	or	r10, r6
     7e2:	b7 28       	or	r11, r7
     7e4:	c8 28       	or	r12, r8
     7e6:	d9 28       	or	r13, r9
     7e8:	0b c0       	rjmp	.+22     	; 0x800 <_fpadd_parts+0x192>
     7ea:	82 15       	cp	r24, r2
     7ec:	93 05       	cpc	r25, r3
     7ee:	2c f0       	brlt	.+10     	; 0x7fa <_fpadd_parts+0x18c>
     7f0:	1c 01       	movw	r2, r24
     7f2:	aa 24       	eor	r10, r10
     7f4:	bb 24       	eor	r11, r11
     7f6:	65 01       	movw	r12, r10
     7f8:	03 c0       	rjmp	.+6      	; 0x800 <_fpadd_parts+0x192>
     7fa:	ee 24       	eor	r14, r14
     7fc:	ff 24       	eor	r15, r15
     7fe:	87 01       	movw	r16, r14
     800:	11 96       	adiw	r26, 0x01	; 1
     802:	9c 91       	ld	r25, X
     804:	d2 01       	movw	r26, r4
     806:	11 96       	adiw	r26, 0x01	; 1
     808:	8c 91       	ld	r24, X
     80a:	98 17       	cp	r25, r24
     80c:	09 f4       	brne	.+2      	; 0x810 <_fpadd_parts+0x1a2>
     80e:	45 c0       	rjmp	.+138    	; 0x89a <__stack+0x3b>
     810:	99 23       	and	r25, r25
     812:	39 f0       	breq	.+14     	; 0x822 <_fpadd_parts+0x1b4>
     814:	a8 01       	movw	r20, r16
     816:	97 01       	movw	r18, r14
     818:	2a 19       	sub	r18, r10
     81a:	3b 09       	sbc	r19, r11
     81c:	4c 09       	sbc	r20, r12
     81e:	5d 09       	sbc	r21, r13
     820:	06 c0       	rjmp	.+12     	; 0x82e <_fpadd_parts+0x1c0>
     822:	a6 01       	movw	r20, r12
     824:	95 01       	movw	r18, r10
     826:	2e 19       	sub	r18, r14
     828:	3f 09       	sbc	r19, r15
     82a:	40 0b       	sbc	r20, r16
     82c:	51 0b       	sbc	r21, r17
     82e:	57 fd       	sbrc	r21, 7
     830:	08 c0       	rjmp	.+16     	; 0x842 <_fpadd_parts+0x1d4>
     832:	11 82       	std	Z+1, r1	; 0x01
     834:	33 82       	std	Z+3, r3	; 0x03
     836:	22 82       	std	Z+2, r2	; 0x02
     838:	24 83       	std	Z+4, r18	; 0x04
     83a:	35 83       	std	Z+5, r19	; 0x05
     83c:	46 83       	std	Z+6, r20	; 0x06
     83e:	57 83       	std	Z+7, r21	; 0x07
     840:	1d c0       	rjmp	.+58     	; 0x87c <__stack+0x1d>
     842:	81 e0       	ldi	r24, 0x01	; 1
     844:	81 83       	std	Z+1, r24	; 0x01
     846:	33 82       	std	Z+3, r3	; 0x03
     848:	22 82       	std	Z+2, r2	; 0x02
     84a:	88 27       	eor	r24, r24
     84c:	99 27       	eor	r25, r25
     84e:	dc 01       	movw	r26, r24
     850:	82 1b       	sub	r24, r18
     852:	93 0b       	sbc	r25, r19
     854:	a4 0b       	sbc	r26, r20
     856:	b5 0b       	sbc	r27, r21
     858:	84 83       	std	Z+4, r24	; 0x04
     85a:	95 83       	std	Z+5, r25	; 0x05
     85c:	a6 83       	std	Z+6, r26	; 0x06
     85e:	b7 83       	std	Z+7, r27	; 0x07
     860:	0d c0       	rjmp	.+26     	; 0x87c <__stack+0x1d>
     862:	22 0f       	add	r18, r18
     864:	33 1f       	adc	r19, r19
     866:	44 1f       	adc	r20, r20
     868:	55 1f       	adc	r21, r21
     86a:	24 83       	std	Z+4, r18	; 0x04
     86c:	35 83       	std	Z+5, r19	; 0x05
     86e:	46 83       	std	Z+6, r20	; 0x06
     870:	57 83       	std	Z+7, r21	; 0x07
     872:	82 81       	ldd	r24, Z+2	; 0x02
     874:	93 81       	ldd	r25, Z+3	; 0x03
     876:	01 97       	sbiw	r24, 0x01	; 1
     878:	93 83       	std	Z+3, r25	; 0x03
     87a:	82 83       	std	Z+2, r24	; 0x02
     87c:	24 81       	ldd	r18, Z+4	; 0x04
     87e:	35 81       	ldd	r19, Z+5	; 0x05
     880:	46 81       	ldd	r20, Z+6	; 0x06
     882:	57 81       	ldd	r21, Z+7	; 0x07
     884:	da 01       	movw	r26, r20
     886:	c9 01       	movw	r24, r18
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	a1 09       	sbc	r26, r1
     88c:	b1 09       	sbc	r27, r1
     88e:	8f 5f       	subi	r24, 0xFF	; 255
     890:	9f 4f       	sbci	r25, 0xFF	; 255
     892:	af 4f       	sbci	r26, 0xFF	; 255
     894:	bf 43       	sbci	r27, 0x3F	; 63
     896:	28 f3       	brcs	.-54     	; 0x862 <__stack+0x3>
     898:	0b c0       	rjmp	.+22     	; 0x8b0 <__stack+0x51>
     89a:	91 83       	std	Z+1, r25	; 0x01
     89c:	33 82       	std	Z+3, r3	; 0x03
     89e:	22 82       	std	Z+2, r2	; 0x02
     8a0:	ea 0c       	add	r14, r10
     8a2:	fb 1c       	adc	r15, r11
     8a4:	0c 1d       	adc	r16, r12
     8a6:	1d 1d       	adc	r17, r13
     8a8:	e4 82       	std	Z+4, r14	; 0x04
     8aa:	f5 82       	std	Z+5, r15	; 0x05
     8ac:	06 83       	std	Z+6, r16	; 0x06
     8ae:	17 83       	std	Z+7, r17	; 0x07
     8b0:	83 e0       	ldi	r24, 0x03	; 3
     8b2:	80 83       	st	Z, r24
     8b4:	24 81       	ldd	r18, Z+4	; 0x04
     8b6:	35 81       	ldd	r19, Z+5	; 0x05
     8b8:	46 81       	ldd	r20, Z+6	; 0x06
     8ba:	57 81       	ldd	r21, Z+7	; 0x07
     8bc:	57 ff       	sbrs	r21, 7
     8be:	1a c0       	rjmp	.+52     	; 0x8f4 <__stack+0x95>
     8c0:	c9 01       	movw	r24, r18
     8c2:	aa 27       	eor	r26, r26
     8c4:	97 fd       	sbrc	r25, 7
     8c6:	a0 95       	com	r26
     8c8:	ba 2f       	mov	r27, r26
     8ca:	81 70       	andi	r24, 0x01	; 1
     8cc:	90 70       	andi	r25, 0x00	; 0
     8ce:	a0 70       	andi	r26, 0x00	; 0
     8d0:	b0 70       	andi	r27, 0x00	; 0
     8d2:	56 95       	lsr	r21
     8d4:	47 95       	ror	r20
     8d6:	37 95       	ror	r19
     8d8:	27 95       	ror	r18
     8da:	82 2b       	or	r24, r18
     8dc:	93 2b       	or	r25, r19
     8de:	a4 2b       	or	r26, r20
     8e0:	b5 2b       	or	r27, r21
     8e2:	84 83       	std	Z+4, r24	; 0x04
     8e4:	95 83       	std	Z+5, r25	; 0x05
     8e6:	a6 83       	std	Z+6, r26	; 0x06
     8e8:	b7 83       	std	Z+7, r27	; 0x07
     8ea:	82 81       	ldd	r24, Z+2	; 0x02
     8ec:	93 81       	ldd	r25, Z+3	; 0x03
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	93 83       	std	Z+3, r25	; 0x03
     8f2:	82 83       	std	Z+2, r24	; 0x02
     8f4:	df 01       	movw	r26, r30
     8f6:	01 c0       	rjmp	.+2      	; 0x8fa <__stack+0x9b>
     8f8:	d2 01       	movw	r26, r4
     8fa:	cd 01       	movw	r24, r26
     8fc:	cd b7       	in	r28, 0x3d	; 61
     8fe:	de b7       	in	r29, 0x3e	; 62
     900:	e2 e1       	ldi	r30, 0x12	; 18
     902:	0c 94 81 08 	jmp	0x1102	; 0x1102 <__epilogue_restores__>

00000906 <__subsf3>:
     906:	a0 e2       	ldi	r26, 0x20	; 32
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	e9 e8       	ldi	r30, 0x89	; 137
     90c:	f4 e0       	ldi	r31, 0x04	; 4
     90e:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__+0x18>
     912:	69 83       	std	Y+1, r22	; 0x01
     914:	7a 83       	std	Y+2, r23	; 0x02
     916:	8b 83       	std	Y+3, r24	; 0x03
     918:	9c 83       	std	Y+4, r25	; 0x04
     91a:	2d 83       	std	Y+5, r18	; 0x05
     91c:	3e 83       	std	Y+6, r19	; 0x06
     91e:	4f 83       	std	Y+7, r20	; 0x07
     920:	58 87       	std	Y+8, r21	; 0x08
     922:	e9 e0       	ldi	r30, 0x09	; 9
     924:	ee 2e       	mov	r14, r30
     926:	f1 2c       	mov	r15, r1
     928:	ec 0e       	add	r14, r28
     92a:	fd 1e       	adc	r15, r29
     92c:	ce 01       	movw	r24, r28
     92e:	01 96       	adiw	r24, 0x01	; 1
     930:	b7 01       	movw	r22, r14
     932:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     936:	8e 01       	movw	r16, r28
     938:	0f 5e       	subi	r16, 0xEF	; 239
     93a:	1f 4f       	sbci	r17, 0xFF	; 255
     93c:	ce 01       	movw	r24, r28
     93e:	05 96       	adiw	r24, 0x05	; 5
     940:	b8 01       	movw	r22, r16
     942:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     946:	8a 89       	ldd	r24, Y+18	; 0x12
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	89 27       	eor	r24, r25
     94c:	8a 8b       	std	Y+18, r24	; 0x12
     94e:	c7 01       	movw	r24, r14
     950:	b8 01       	movw	r22, r16
     952:	ae 01       	movw	r20, r28
     954:	47 5e       	subi	r20, 0xE7	; 231
     956:	5f 4f       	sbci	r21, 0xFF	; 255
     958:	0e 94 37 03 	call	0x66e	; 0x66e <_fpadd_parts>
     95c:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__pack_f>
     960:	a0 96       	adiw	r28, 0x20	; 32
     962:	e6 e0       	ldi	r30, 0x06	; 6
     964:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__+0x18>

00000968 <__addsf3>:
     968:	a0 e2       	ldi	r26, 0x20	; 32
     96a:	b0 e0       	ldi	r27, 0x00	; 0
     96c:	ea eb       	ldi	r30, 0xBA	; 186
     96e:	f4 e0       	ldi	r31, 0x04	; 4
     970:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__+0x18>
     974:	69 83       	std	Y+1, r22	; 0x01
     976:	7a 83       	std	Y+2, r23	; 0x02
     978:	8b 83       	std	Y+3, r24	; 0x03
     97a:	9c 83       	std	Y+4, r25	; 0x04
     97c:	2d 83       	std	Y+5, r18	; 0x05
     97e:	3e 83       	std	Y+6, r19	; 0x06
     980:	4f 83       	std	Y+7, r20	; 0x07
     982:	58 87       	std	Y+8, r21	; 0x08
     984:	f9 e0       	ldi	r31, 0x09	; 9
     986:	ef 2e       	mov	r14, r31
     988:	f1 2c       	mov	r15, r1
     98a:	ec 0e       	add	r14, r28
     98c:	fd 1e       	adc	r15, r29
     98e:	ce 01       	movw	r24, r28
     990:	01 96       	adiw	r24, 0x01	; 1
     992:	b7 01       	movw	r22, r14
     994:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     998:	8e 01       	movw	r16, r28
     99a:	0f 5e       	subi	r16, 0xEF	; 239
     99c:	1f 4f       	sbci	r17, 0xFF	; 255
     99e:	ce 01       	movw	r24, r28
     9a0:	05 96       	adiw	r24, 0x05	; 5
     9a2:	b8 01       	movw	r22, r16
     9a4:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     9a8:	c7 01       	movw	r24, r14
     9aa:	b8 01       	movw	r22, r16
     9ac:	ae 01       	movw	r20, r28
     9ae:	47 5e       	subi	r20, 0xE7	; 231
     9b0:	5f 4f       	sbci	r21, 0xFF	; 255
     9b2:	0e 94 37 03 	call	0x66e	; 0x66e <_fpadd_parts>
     9b6:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__pack_f>
     9ba:	a0 96       	adiw	r28, 0x20	; 32
     9bc:	e6 e0       	ldi	r30, 0x06	; 6
     9be:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__+0x18>

000009c2 <__mulsf3>:
     9c2:	a0 e2       	ldi	r26, 0x20	; 32
     9c4:	b0 e0       	ldi	r27, 0x00	; 0
     9c6:	e7 ee       	ldi	r30, 0xE7	; 231
     9c8:	f4 e0       	ldi	r31, 0x04	; 4
     9ca:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__prologue_saves__>
     9ce:	69 83       	std	Y+1, r22	; 0x01
     9d0:	7a 83       	std	Y+2, r23	; 0x02
     9d2:	8b 83       	std	Y+3, r24	; 0x03
     9d4:	9c 83       	std	Y+4, r25	; 0x04
     9d6:	2d 83       	std	Y+5, r18	; 0x05
     9d8:	3e 83       	std	Y+6, r19	; 0x06
     9da:	4f 83       	std	Y+7, r20	; 0x07
     9dc:	58 87       	std	Y+8, r21	; 0x08
     9de:	ce 01       	movw	r24, r28
     9e0:	01 96       	adiw	r24, 0x01	; 1
     9e2:	be 01       	movw	r22, r28
     9e4:	67 5f       	subi	r22, 0xF7	; 247
     9e6:	7f 4f       	sbci	r23, 0xFF	; 255
     9e8:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     9ec:	ce 01       	movw	r24, r28
     9ee:	05 96       	adiw	r24, 0x05	; 5
     9f0:	be 01       	movw	r22, r28
     9f2:	6f 5e       	subi	r22, 0xEF	; 239
     9f4:	7f 4f       	sbci	r23, 0xFF	; 255
     9f6:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     9fa:	99 85       	ldd	r25, Y+9	; 0x09
     9fc:	92 30       	cpi	r25, 0x02	; 2
     9fe:	88 f0       	brcs	.+34     	; 0xa22 <__mulsf3+0x60>
     a00:	89 89       	ldd	r24, Y+17	; 0x11
     a02:	82 30       	cpi	r24, 0x02	; 2
     a04:	c8 f0       	brcs	.+50     	; 0xa38 <__mulsf3+0x76>
     a06:	94 30       	cpi	r25, 0x04	; 4
     a08:	19 f4       	brne	.+6      	; 0xa10 <__mulsf3+0x4e>
     a0a:	82 30       	cpi	r24, 0x02	; 2
     a0c:	51 f4       	brne	.+20     	; 0xa22 <__mulsf3+0x60>
     a0e:	04 c0       	rjmp	.+8      	; 0xa18 <__mulsf3+0x56>
     a10:	84 30       	cpi	r24, 0x04	; 4
     a12:	29 f4       	brne	.+10     	; 0xa1e <__mulsf3+0x5c>
     a14:	92 30       	cpi	r25, 0x02	; 2
     a16:	81 f4       	brne	.+32     	; 0xa38 <__mulsf3+0x76>
     a18:	80 e6       	ldi	r24, 0x60	; 96
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	c6 c0       	rjmp	.+396    	; 0xbaa <__mulsf3+0x1e8>
     a1e:	92 30       	cpi	r25, 0x02	; 2
     a20:	49 f4       	brne	.+18     	; 0xa34 <__mulsf3+0x72>
     a22:	20 e0       	ldi	r18, 0x00	; 0
     a24:	9a 85       	ldd	r25, Y+10	; 0x0a
     a26:	8a 89       	ldd	r24, Y+18	; 0x12
     a28:	98 13       	cpse	r25, r24
     a2a:	21 e0       	ldi	r18, 0x01	; 1
     a2c:	2a 87       	std	Y+10, r18	; 0x0a
     a2e:	ce 01       	movw	r24, r28
     a30:	09 96       	adiw	r24, 0x09	; 9
     a32:	bb c0       	rjmp	.+374    	; 0xbaa <__mulsf3+0x1e8>
     a34:	82 30       	cpi	r24, 0x02	; 2
     a36:	49 f4       	brne	.+18     	; 0xa4a <__mulsf3+0x88>
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a3c:	8a 89       	ldd	r24, Y+18	; 0x12
     a3e:	98 13       	cpse	r25, r24
     a40:	21 e0       	ldi	r18, 0x01	; 1
     a42:	2a 8b       	std	Y+18, r18	; 0x12
     a44:	ce 01       	movw	r24, r28
     a46:	41 96       	adiw	r24, 0x11	; 17
     a48:	b0 c0       	rjmp	.+352    	; 0xbaa <__mulsf3+0x1e8>
     a4a:	2d 84       	ldd	r2, Y+13	; 0x0d
     a4c:	3e 84       	ldd	r3, Y+14	; 0x0e
     a4e:	4f 84       	ldd	r4, Y+15	; 0x0f
     a50:	58 88       	ldd	r5, Y+16	; 0x10
     a52:	6d 88       	ldd	r6, Y+21	; 0x15
     a54:	7e 88       	ldd	r7, Y+22	; 0x16
     a56:	8f 88       	ldd	r8, Y+23	; 0x17
     a58:	98 8c       	ldd	r9, Y+24	; 0x18
     a5a:	ee 24       	eor	r14, r14
     a5c:	ff 24       	eor	r15, r15
     a5e:	87 01       	movw	r16, r14
     a60:	aa 24       	eor	r10, r10
     a62:	bb 24       	eor	r11, r11
     a64:	65 01       	movw	r12, r10
     a66:	40 e0       	ldi	r20, 0x00	; 0
     a68:	50 e0       	ldi	r21, 0x00	; 0
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	70 e0       	ldi	r23, 0x00	; 0
     a6e:	e0 e0       	ldi	r30, 0x00	; 0
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	c1 01       	movw	r24, r2
     a74:	81 70       	andi	r24, 0x01	; 1
     a76:	90 70       	andi	r25, 0x00	; 0
     a78:	89 2b       	or	r24, r25
     a7a:	e9 f0       	breq	.+58     	; 0xab6 <__mulsf3+0xf4>
     a7c:	e6 0c       	add	r14, r6
     a7e:	f7 1c       	adc	r15, r7
     a80:	08 1d       	adc	r16, r8
     a82:	19 1d       	adc	r17, r9
     a84:	9a 01       	movw	r18, r20
     a86:	ab 01       	movw	r20, r22
     a88:	2a 0d       	add	r18, r10
     a8a:	3b 1d       	adc	r19, r11
     a8c:	4c 1d       	adc	r20, r12
     a8e:	5d 1d       	adc	r21, r13
     a90:	80 e0       	ldi	r24, 0x00	; 0
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	a0 e0       	ldi	r26, 0x00	; 0
     a96:	b0 e0       	ldi	r27, 0x00	; 0
     a98:	e6 14       	cp	r14, r6
     a9a:	f7 04       	cpc	r15, r7
     a9c:	08 05       	cpc	r16, r8
     a9e:	19 05       	cpc	r17, r9
     aa0:	20 f4       	brcc	.+8      	; 0xaaa <__mulsf3+0xe8>
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	a0 e0       	ldi	r26, 0x00	; 0
     aa8:	b0 e0       	ldi	r27, 0x00	; 0
     aaa:	ba 01       	movw	r22, r20
     aac:	a9 01       	movw	r20, r18
     aae:	48 0f       	add	r20, r24
     ab0:	59 1f       	adc	r21, r25
     ab2:	6a 1f       	adc	r22, r26
     ab4:	7b 1f       	adc	r23, r27
     ab6:	aa 0c       	add	r10, r10
     ab8:	bb 1c       	adc	r11, r11
     aba:	cc 1c       	adc	r12, r12
     abc:	dd 1c       	adc	r13, r13
     abe:	97 fe       	sbrs	r9, 7
     ac0:	08 c0       	rjmp	.+16     	; 0xad2 <__mulsf3+0x110>
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	a0 e0       	ldi	r26, 0x00	; 0
     ac8:	b0 e0       	ldi	r27, 0x00	; 0
     aca:	a8 2a       	or	r10, r24
     acc:	b9 2a       	or	r11, r25
     ace:	ca 2a       	or	r12, r26
     ad0:	db 2a       	or	r13, r27
     ad2:	31 96       	adiw	r30, 0x01	; 1
     ad4:	e0 32       	cpi	r30, 0x20	; 32
     ad6:	f1 05       	cpc	r31, r1
     ad8:	49 f0       	breq	.+18     	; 0xaec <__mulsf3+0x12a>
     ada:	66 0c       	add	r6, r6
     adc:	77 1c       	adc	r7, r7
     ade:	88 1c       	adc	r8, r8
     ae0:	99 1c       	adc	r9, r9
     ae2:	56 94       	lsr	r5
     ae4:	47 94       	ror	r4
     ae6:	37 94       	ror	r3
     ae8:	27 94       	ror	r2
     aea:	c3 cf       	rjmp	.-122    	; 0xa72 <__mulsf3+0xb0>
     aec:	fa 85       	ldd	r31, Y+10	; 0x0a
     aee:	ea 89       	ldd	r30, Y+18	; 0x12
     af0:	2b 89       	ldd	r18, Y+19	; 0x13
     af2:	3c 89       	ldd	r19, Y+20	; 0x14
     af4:	8b 85       	ldd	r24, Y+11	; 0x0b
     af6:	9c 85       	ldd	r25, Y+12	; 0x0c
     af8:	28 0f       	add	r18, r24
     afa:	39 1f       	adc	r19, r25
     afc:	2e 5f       	subi	r18, 0xFE	; 254
     afe:	3f 4f       	sbci	r19, 0xFF	; 255
     b00:	17 c0       	rjmp	.+46     	; 0xb30 <__mulsf3+0x16e>
     b02:	ca 01       	movw	r24, r20
     b04:	81 70       	andi	r24, 0x01	; 1
     b06:	90 70       	andi	r25, 0x00	; 0
     b08:	89 2b       	or	r24, r25
     b0a:	61 f0       	breq	.+24     	; 0xb24 <__mulsf3+0x162>
     b0c:	16 95       	lsr	r17
     b0e:	07 95       	ror	r16
     b10:	f7 94       	ror	r15
     b12:	e7 94       	ror	r14
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	a0 e0       	ldi	r26, 0x00	; 0
     b1a:	b0 e8       	ldi	r27, 0x80	; 128
     b1c:	e8 2a       	or	r14, r24
     b1e:	f9 2a       	or	r15, r25
     b20:	0a 2b       	or	r16, r26
     b22:	1b 2b       	or	r17, r27
     b24:	76 95       	lsr	r23
     b26:	67 95       	ror	r22
     b28:	57 95       	ror	r21
     b2a:	47 95       	ror	r20
     b2c:	2f 5f       	subi	r18, 0xFF	; 255
     b2e:	3f 4f       	sbci	r19, 0xFF	; 255
     b30:	77 fd       	sbrc	r23, 7
     b32:	e7 cf       	rjmp	.-50     	; 0xb02 <__mulsf3+0x140>
     b34:	0c c0       	rjmp	.+24     	; 0xb4e <__mulsf3+0x18c>
     b36:	44 0f       	add	r20, r20
     b38:	55 1f       	adc	r21, r21
     b3a:	66 1f       	adc	r22, r22
     b3c:	77 1f       	adc	r23, r23
     b3e:	17 fd       	sbrc	r17, 7
     b40:	41 60       	ori	r20, 0x01	; 1
     b42:	ee 0c       	add	r14, r14
     b44:	ff 1c       	adc	r15, r15
     b46:	00 1f       	adc	r16, r16
     b48:	11 1f       	adc	r17, r17
     b4a:	21 50       	subi	r18, 0x01	; 1
     b4c:	30 40       	sbci	r19, 0x00	; 0
     b4e:	40 30       	cpi	r20, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	59 07       	cpc	r21, r25
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	69 07       	cpc	r22, r25
     b58:	90 e4       	ldi	r25, 0x40	; 64
     b5a:	79 07       	cpc	r23, r25
     b5c:	60 f3       	brcs	.-40     	; 0xb36 <__mulsf3+0x174>
     b5e:	2b 8f       	std	Y+27, r18	; 0x1b
     b60:	3c 8f       	std	Y+28, r19	; 0x1c
     b62:	db 01       	movw	r26, r22
     b64:	ca 01       	movw	r24, r20
     b66:	8f 77       	andi	r24, 0x7F	; 127
     b68:	90 70       	andi	r25, 0x00	; 0
     b6a:	a0 70       	andi	r26, 0x00	; 0
     b6c:	b0 70       	andi	r27, 0x00	; 0
     b6e:	80 34       	cpi	r24, 0x40	; 64
     b70:	91 05       	cpc	r25, r1
     b72:	a1 05       	cpc	r26, r1
     b74:	b1 05       	cpc	r27, r1
     b76:	61 f4       	brne	.+24     	; 0xb90 <__mulsf3+0x1ce>
     b78:	47 fd       	sbrc	r20, 7
     b7a:	0a c0       	rjmp	.+20     	; 0xb90 <__mulsf3+0x1ce>
     b7c:	e1 14       	cp	r14, r1
     b7e:	f1 04       	cpc	r15, r1
     b80:	01 05       	cpc	r16, r1
     b82:	11 05       	cpc	r17, r1
     b84:	29 f0       	breq	.+10     	; 0xb90 <__mulsf3+0x1ce>
     b86:	40 5c       	subi	r20, 0xC0	; 192
     b88:	5f 4f       	sbci	r21, 0xFF	; 255
     b8a:	6f 4f       	sbci	r22, 0xFF	; 255
     b8c:	7f 4f       	sbci	r23, 0xFF	; 255
     b8e:	40 78       	andi	r20, 0x80	; 128
     b90:	1a 8e       	std	Y+26, r1	; 0x1a
     b92:	fe 17       	cp	r31, r30
     b94:	11 f0       	breq	.+4      	; 0xb9a <__mulsf3+0x1d8>
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	8a 8f       	std	Y+26, r24	; 0x1a
     b9a:	4d 8f       	std	Y+29, r20	; 0x1d
     b9c:	5e 8f       	std	Y+30, r21	; 0x1e
     b9e:	6f 8f       	std	Y+31, r22	; 0x1f
     ba0:	78 a3       	std	Y+32, r23	; 0x20
     ba2:	83 e0       	ldi	r24, 0x03	; 3
     ba4:	89 8f       	std	Y+25, r24	; 0x19
     ba6:	ce 01       	movw	r24, r28
     ba8:	49 96       	adiw	r24, 0x19	; 25
     baa:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__pack_f>
     bae:	a0 96       	adiw	r28, 0x20	; 32
     bb0:	e2 e1       	ldi	r30, 0x12	; 18
     bb2:	0c 94 81 08 	jmp	0x1102	; 0x1102 <__epilogue_restores__>

00000bb6 <__gtsf2>:
     bb6:	a8 e1       	ldi	r26, 0x18	; 24
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	e1 ee       	ldi	r30, 0xE1	; 225
     bbc:	f5 e0       	ldi	r31, 0x05	; 5
     bbe:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__+0x18>
     bc2:	69 83       	std	Y+1, r22	; 0x01
     bc4:	7a 83       	std	Y+2, r23	; 0x02
     bc6:	8b 83       	std	Y+3, r24	; 0x03
     bc8:	9c 83       	std	Y+4, r25	; 0x04
     bca:	2d 83       	std	Y+5, r18	; 0x05
     bcc:	3e 83       	std	Y+6, r19	; 0x06
     bce:	4f 83       	std	Y+7, r20	; 0x07
     bd0:	58 87       	std	Y+8, r21	; 0x08
     bd2:	89 e0       	ldi	r24, 0x09	; 9
     bd4:	e8 2e       	mov	r14, r24
     bd6:	f1 2c       	mov	r15, r1
     bd8:	ec 0e       	add	r14, r28
     bda:	fd 1e       	adc	r15, r29
     bdc:	ce 01       	movw	r24, r28
     bde:	01 96       	adiw	r24, 0x01	; 1
     be0:	b7 01       	movw	r22, r14
     be2:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     be6:	8e 01       	movw	r16, r28
     be8:	0f 5e       	subi	r16, 0xEF	; 239
     bea:	1f 4f       	sbci	r17, 0xFF	; 255
     bec:	ce 01       	movw	r24, r28
     bee:	05 96       	adiw	r24, 0x05	; 5
     bf0:	b8 01       	movw	r22, r16
     bf2:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     bf6:	89 85       	ldd	r24, Y+9	; 0x09
     bf8:	82 30       	cpi	r24, 0x02	; 2
     bfa:	40 f0       	brcs	.+16     	; 0xc0c <__gtsf2+0x56>
     bfc:	89 89       	ldd	r24, Y+17	; 0x11
     bfe:	82 30       	cpi	r24, 0x02	; 2
     c00:	28 f0       	brcs	.+10     	; 0xc0c <__gtsf2+0x56>
     c02:	c7 01       	movw	r24, r14
     c04:	b8 01       	movw	r22, r16
     c06:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fpcmp_parts_f>
     c0a:	01 c0       	rjmp	.+2      	; 0xc0e <__gtsf2+0x58>
     c0c:	8f ef       	ldi	r24, 0xFF	; 255
     c0e:	68 96       	adiw	r28, 0x18	; 24
     c10:	e6 e0       	ldi	r30, 0x06	; 6
     c12:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__+0x18>

00000c16 <__gesf2>:
     c16:	a8 e1       	ldi	r26, 0x18	; 24
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	e1 e1       	ldi	r30, 0x11	; 17
     c1c:	f6 e0       	ldi	r31, 0x06	; 6
     c1e:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__+0x18>
     c22:	69 83       	std	Y+1, r22	; 0x01
     c24:	7a 83       	std	Y+2, r23	; 0x02
     c26:	8b 83       	std	Y+3, r24	; 0x03
     c28:	9c 83       	std	Y+4, r25	; 0x04
     c2a:	2d 83       	std	Y+5, r18	; 0x05
     c2c:	3e 83       	std	Y+6, r19	; 0x06
     c2e:	4f 83       	std	Y+7, r20	; 0x07
     c30:	58 87       	std	Y+8, r21	; 0x08
     c32:	89 e0       	ldi	r24, 0x09	; 9
     c34:	e8 2e       	mov	r14, r24
     c36:	f1 2c       	mov	r15, r1
     c38:	ec 0e       	add	r14, r28
     c3a:	fd 1e       	adc	r15, r29
     c3c:	ce 01       	movw	r24, r28
     c3e:	01 96       	adiw	r24, 0x01	; 1
     c40:	b7 01       	movw	r22, r14
     c42:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     c46:	8e 01       	movw	r16, r28
     c48:	0f 5e       	subi	r16, 0xEF	; 239
     c4a:	1f 4f       	sbci	r17, 0xFF	; 255
     c4c:	ce 01       	movw	r24, r28
     c4e:	05 96       	adiw	r24, 0x05	; 5
     c50:	b8 01       	movw	r22, r16
     c52:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     c56:	89 85       	ldd	r24, Y+9	; 0x09
     c58:	82 30       	cpi	r24, 0x02	; 2
     c5a:	40 f0       	brcs	.+16     	; 0xc6c <__gesf2+0x56>
     c5c:	89 89       	ldd	r24, Y+17	; 0x11
     c5e:	82 30       	cpi	r24, 0x02	; 2
     c60:	28 f0       	brcs	.+10     	; 0xc6c <__gesf2+0x56>
     c62:	c7 01       	movw	r24, r14
     c64:	b8 01       	movw	r22, r16
     c66:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fpcmp_parts_f>
     c6a:	01 c0       	rjmp	.+2      	; 0xc6e <__gesf2+0x58>
     c6c:	8f ef       	ldi	r24, 0xFF	; 255
     c6e:	68 96       	adiw	r28, 0x18	; 24
     c70:	e6 e0       	ldi	r30, 0x06	; 6
     c72:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__+0x18>

00000c76 <__ltsf2>:
     c76:	a8 e1       	ldi	r26, 0x18	; 24
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	e1 e4       	ldi	r30, 0x41	; 65
     c7c:	f6 e0       	ldi	r31, 0x06	; 6
     c7e:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__+0x18>
     c82:	69 83       	std	Y+1, r22	; 0x01
     c84:	7a 83       	std	Y+2, r23	; 0x02
     c86:	8b 83       	std	Y+3, r24	; 0x03
     c88:	9c 83       	std	Y+4, r25	; 0x04
     c8a:	2d 83       	std	Y+5, r18	; 0x05
     c8c:	3e 83       	std	Y+6, r19	; 0x06
     c8e:	4f 83       	std	Y+7, r20	; 0x07
     c90:	58 87       	std	Y+8, r21	; 0x08
     c92:	89 e0       	ldi	r24, 0x09	; 9
     c94:	e8 2e       	mov	r14, r24
     c96:	f1 2c       	mov	r15, r1
     c98:	ec 0e       	add	r14, r28
     c9a:	fd 1e       	adc	r15, r29
     c9c:	ce 01       	movw	r24, r28
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	b7 01       	movw	r22, r14
     ca2:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     ca6:	8e 01       	movw	r16, r28
     ca8:	0f 5e       	subi	r16, 0xEF	; 239
     caa:	1f 4f       	sbci	r17, 0xFF	; 255
     cac:	ce 01       	movw	r24, r28
     cae:	05 96       	adiw	r24, 0x05	; 5
     cb0:	b8 01       	movw	r22, r16
     cb2:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     cb6:	89 85       	ldd	r24, Y+9	; 0x09
     cb8:	82 30       	cpi	r24, 0x02	; 2
     cba:	40 f0       	brcs	.+16     	; 0xccc <__ltsf2+0x56>
     cbc:	89 89       	ldd	r24, Y+17	; 0x11
     cbe:	82 30       	cpi	r24, 0x02	; 2
     cc0:	28 f0       	brcs	.+10     	; 0xccc <__ltsf2+0x56>
     cc2:	c7 01       	movw	r24, r14
     cc4:	b8 01       	movw	r22, r16
     cc6:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fpcmp_parts_f>
     cca:	01 c0       	rjmp	.+2      	; 0xcce <__ltsf2+0x58>
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	68 96       	adiw	r28, 0x18	; 24
     cd0:	e6 e0       	ldi	r30, 0x06	; 6
     cd2:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__+0x18>

00000cd6 <__fixsfsi>:
     cd6:	ac e0       	ldi	r26, 0x0C	; 12
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e1 e7       	ldi	r30, 0x71	; 113
     cdc:	f6 e0       	ldi	r31, 0x06	; 6
     cde:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <__prologue_saves__+0x20>
     ce2:	69 83       	std	Y+1, r22	; 0x01
     ce4:	7a 83       	std	Y+2, r23	; 0x02
     ce6:	8b 83       	std	Y+3, r24	; 0x03
     ce8:	9c 83       	std	Y+4, r25	; 0x04
     cea:	ce 01       	movw	r24, r28
     cec:	01 96       	adiw	r24, 0x01	; 1
     cee:	be 01       	movw	r22, r28
     cf0:	6b 5f       	subi	r22, 0xFB	; 251
     cf2:	7f 4f       	sbci	r23, 0xFF	; 255
     cf4:	0e 94 94 07 	call	0xf28	; 0xf28 <__unpack_f>
     cf8:	8d 81       	ldd	r24, Y+5	; 0x05
     cfa:	82 30       	cpi	r24, 0x02	; 2
     cfc:	61 f1       	breq	.+88     	; 0xd56 <__fixsfsi+0x80>
     cfe:	82 30       	cpi	r24, 0x02	; 2
     d00:	50 f1       	brcs	.+84     	; 0xd56 <__fixsfsi+0x80>
     d02:	84 30       	cpi	r24, 0x04	; 4
     d04:	21 f4       	brne	.+8      	; 0xd0e <__fixsfsi+0x38>
     d06:	8e 81       	ldd	r24, Y+6	; 0x06
     d08:	88 23       	and	r24, r24
     d0a:	51 f1       	breq	.+84     	; 0xd60 <__fixsfsi+0x8a>
     d0c:	2e c0       	rjmp	.+92     	; 0xd6a <__fixsfsi+0x94>
     d0e:	2f 81       	ldd	r18, Y+7	; 0x07
     d10:	38 85       	ldd	r19, Y+8	; 0x08
     d12:	37 fd       	sbrc	r19, 7
     d14:	20 c0       	rjmp	.+64     	; 0xd56 <__fixsfsi+0x80>
     d16:	6e 81       	ldd	r22, Y+6	; 0x06
     d18:	2f 31       	cpi	r18, 0x1F	; 31
     d1a:	31 05       	cpc	r19, r1
     d1c:	1c f0       	brlt	.+6      	; 0xd24 <__fixsfsi+0x4e>
     d1e:	66 23       	and	r22, r22
     d20:	f9 f0       	breq	.+62     	; 0xd60 <__fixsfsi+0x8a>
     d22:	23 c0       	rjmp	.+70     	; 0xd6a <__fixsfsi+0x94>
     d24:	8e e1       	ldi	r24, 0x1E	; 30
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	82 1b       	sub	r24, r18
     d2a:	93 0b       	sbc	r25, r19
     d2c:	29 85       	ldd	r18, Y+9	; 0x09
     d2e:	3a 85       	ldd	r19, Y+10	; 0x0a
     d30:	4b 85       	ldd	r20, Y+11	; 0x0b
     d32:	5c 85       	ldd	r21, Y+12	; 0x0c
     d34:	04 c0       	rjmp	.+8      	; 0xd3e <__fixsfsi+0x68>
     d36:	56 95       	lsr	r21
     d38:	47 95       	ror	r20
     d3a:	37 95       	ror	r19
     d3c:	27 95       	ror	r18
     d3e:	8a 95       	dec	r24
     d40:	d2 f7       	brpl	.-12     	; 0xd36 <__fixsfsi+0x60>
     d42:	66 23       	and	r22, r22
     d44:	b1 f0       	breq	.+44     	; 0xd72 <__fixsfsi+0x9c>
     d46:	50 95       	com	r21
     d48:	40 95       	com	r20
     d4a:	30 95       	com	r19
     d4c:	21 95       	neg	r18
     d4e:	3f 4f       	sbci	r19, 0xFF	; 255
     d50:	4f 4f       	sbci	r20, 0xFF	; 255
     d52:	5f 4f       	sbci	r21, 0xFF	; 255
     d54:	0e c0       	rjmp	.+28     	; 0xd72 <__fixsfsi+0x9c>
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 e0       	ldi	r20, 0x00	; 0
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	09 c0       	rjmp	.+18     	; 0xd72 <__fixsfsi+0x9c>
     d60:	2f ef       	ldi	r18, 0xFF	; 255
     d62:	3f ef       	ldi	r19, 0xFF	; 255
     d64:	4f ef       	ldi	r20, 0xFF	; 255
     d66:	5f e7       	ldi	r21, 0x7F	; 127
     d68:	04 c0       	rjmp	.+8      	; 0xd72 <__fixsfsi+0x9c>
     d6a:	20 e0       	ldi	r18, 0x00	; 0
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	40 e0       	ldi	r20, 0x00	; 0
     d70:	50 e8       	ldi	r21, 0x80	; 128
     d72:	b9 01       	movw	r22, r18
     d74:	ca 01       	movw	r24, r20
     d76:	2c 96       	adiw	r28, 0x0c	; 12
     d78:	e2 e0       	ldi	r30, 0x02	; 2
     d7a:	0c 94 91 08 	jmp	0x1122	; 0x1122 <__epilogue_restores__+0x20>

00000d7e <__pack_f>:
     d7e:	df 92       	push	r13
     d80:	ef 92       	push	r14
     d82:	ff 92       	push	r15
     d84:	0f 93       	push	r16
     d86:	1f 93       	push	r17
     d88:	fc 01       	movw	r30, r24
     d8a:	e4 80       	ldd	r14, Z+4	; 0x04
     d8c:	f5 80       	ldd	r15, Z+5	; 0x05
     d8e:	06 81       	ldd	r16, Z+6	; 0x06
     d90:	17 81       	ldd	r17, Z+7	; 0x07
     d92:	d1 80       	ldd	r13, Z+1	; 0x01
     d94:	80 81       	ld	r24, Z
     d96:	82 30       	cpi	r24, 0x02	; 2
     d98:	48 f4       	brcc	.+18     	; 0xdac <__pack_f+0x2e>
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e1       	ldi	r26, 0x10	; 16
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e8 2a       	or	r14, r24
     da4:	f9 2a       	or	r15, r25
     da6:	0a 2b       	or	r16, r26
     da8:	1b 2b       	or	r17, r27
     daa:	a5 c0       	rjmp	.+330    	; 0xef6 <__pack_f+0x178>
     dac:	84 30       	cpi	r24, 0x04	; 4
     dae:	09 f4       	brne	.+2      	; 0xdb2 <__pack_f+0x34>
     db0:	9f c0       	rjmp	.+318    	; 0xef0 <__pack_f+0x172>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	21 f4       	brne	.+8      	; 0xdbe <__pack_f+0x40>
     db6:	ee 24       	eor	r14, r14
     db8:	ff 24       	eor	r15, r15
     dba:	87 01       	movw	r16, r14
     dbc:	05 c0       	rjmp	.+10     	; 0xdc8 <__pack_f+0x4a>
     dbe:	e1 14       	cp	r14, r1
     dc0:	f1 04       	cpc	r15, r1
     dc2:	01 05       	cpc	r16, r1
     dc4:	11 05       	cpc	r17, r1
     dc6:	19 f4       	brne	.+6      	; 0xdce <__pack_f+0x50>
     dc8:	e0 e0       	ldi	r30, 0x00	; 0
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	96 c0       	rjmp	.+300    	; 0xefa <__pack_f+0x17c>
     dce:	62 81       	ldd	r22, Z+2	; 0x02
     dd0:	73 81       	ldd	r23, Z+3	; 0x03
     dd2:	9f ef       	ldi	r25, 0xFF	; 255
     dd4:	62 38       	cpi	r22, 0x82	; 130
     dd6:	79 07       	cpc	r23, r25
     dd8:	0c f0       	brlt	.+2      	; 0xddc <__pack_f+0x5e>
     dda:	5b c0       	rjmp	.+182    	; 0xe92 <__pack_f+0x114>
     ddc:	22 e8       	ldi	r18, 0x82	; 130
     dde:	3f ef       	ldi	r19, 0xFF	; 255
     de0:	26 1b       	sub	r18, r22
     de2:	37 0b       	sbc	r19, r23
     de4:	2a 31       	cpi	r18, 0x1A	; 26
     de6:	31 05       	cpc	r19, r1
     de8:	2c f0       	brlt	.+10     	; 0xdf4 <__pack_f+0x76>
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	40 e0       	ldi	r20, 0x00	; 0
     df0:	50 e0       	ldi	r21, 0x00	; 0
     df2:	2a c0       	rjmp	.+84     	; 0xe48 <__pack_f+0xca>
     df4:	b8 01       	movw	r22, r16
     df6:	a7 01       	movw	r20, r14
     df8:	02 2e       	mov	r0, r18
     dfa:	04 c0       	rjmp	.+8      	; 0xe04 <__pack_f+0x86>
     dfc:	76 95       	lsr	r23
     dfe:	67 95       	ror	r22
     e00:	57 95       	ror	r21
     e02:	47 95       	ror	r20
     e04:	0a 94       	dec	r0
     e06:	d2 f7       	brpl	.-12     	; 0xdfc <__pack_f+0x7e>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	a0 e0       	ldi	r26, 0x00	; 0
     e0e:	b0 e0       	ldi	r27, 0x00	; 0
     e10:	04 c0       	rjmp	.+8      	; 0xe1a <__pack_f+0x9c>
     e12:	88 0f       	add	r24, r24
     e14:	99 1f       	adc	r25, r25
     e16:	aa 1f       	adc	r26, r26
     e18:	bb 1f       	adc	r27, r27
     e1a:	2a 95       	dec	r18
     e1c:	d2 f7       	brpl	.-12     	; 0xe12 <__pack_f+0x94>
     e1e:	01 97       	sbiw	r24, 0x01	; 1
     e20:	a1 09       	sbc	r26, r1
     e22:	b1 09       	sbc	r27, r1
     e24:	8e 21       	and	r24, r14
     e26:	9f 21       	and	r25, r15
     e28:	a0 23       	and	r26, r16
     e2a:	b1 23       	and	r27, r17
     e2c:	00 97       	sbiw	r24, 0x00	; 0
     e2e:	a1 05       	cpc	r26, r1
     e30:	b1 05       	cpc	r27, r1
     e32:	21 f0       	breq	.+8      	; 0xe3c <__pack_f+0xbe>
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	a0 e0       	ldi	r26, 0x00	; 0
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	9a 01       	movw	r18, r20
     e3e:	ab 01       	movw	r20, r22
     e40:	28 2b       	or	r18, r24
     e42:	39 2b       	or	r19, r25
     e44:	4a 2b       	or	r20, r26
     e46:	5b 2b       	or	r21, r27
     e48:	da 01       	movw	r26, r20
     e4a:	c9 01       	movw	r24, r18
     e4c:	8f 77       	andi	r24, 0x7F	; 127
     e4e:	90 70       	andi	r25, 0x00	; 0
     e50:	a0 70       	andi	r26, 0x00	; 0
     e52:	b0 70       	andi	r27, 0x00	; 0
     e54:	80 34       	cpi	r24, 0x40	; 64
     e56:	91 05       	cpc	r25, r1
     e58:	a1 05       	cpc	r26, r1
     e5a:	b1 05       	cpc	r27, r1
     e5c:	39 f4       	brne	.+14     	; 0xe6c <__pack_f+0xee>
     e5e:	27 ff       	sbrs	r18, 7
     e60:	09 c0       	rjmp	.+18     	; 0xe74 <__pack_f+0xf6>
     e62:	20 5c       	subi	r18, 0xC0	; 192
     e64:	3f 4f       	sbci	r19, 0xFF	; 255
     e66:	4f 4f       	sbci	r20, 0xFF	; 255
     e68:	5f 4f       	sbci	r21, 0xFF	; 255
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <__pack_f+0xf6>
     e6c:	21 5c       	subi	r18, 0xC1	; 193
     e6e:	3f 4f       	sbci	r19, 0xFF	; 255
     e70:	4f 4f       	sbci	r20, 0xFF	; 255
     e72:	5f 4f       	sbci	r21, 0xFF	; 255
     e74:	e0 e0       	ldi	r30, 0x00	; 0
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	20 30       	cpi	r18, 0x00	; 0
     e7a:	a0 e0       	ldi	r26, 0x00	; 0
     e7c:	3a 07       	cpc	r19, r26
     e7e:	a0 e0       	ldi	r26, 0x00	; 0
     e80:	4a 07       	cpc	r20, r26
     e82:	a0 e4       	ldi	r26, 0x40	; 64
     e84:	5a 07       	cpc	r21, r26
     e86:	10 f0       	brcs	.+4      	; 0xe8c <__pack_f+0x10e>
     e88:	e1 e0       	ldi	r30, 0x01	; 1
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	79 01       	movw	r14, r18
     e8e:	8a 01       	movw	r16, r20
     e90:	27 c0       	rjmp	.+78     	; 0xee0 <__pack_f+0x162>
     e92:	60 38       	cpi	r22, 0x80	; 128
     e94:	71 05       	cpc	r23, r1
     e96:	64 f5       	brge	.+88     	; 0xef0 <__pack_f+0x172>
     e98:	fb 01       	movw	r30, r22
     e9a:	e1 58       	subi	r30, 0x81	; 129
     e9c:	ff 4f       	sbci	r31, 0xFF	; 255
     e9e:	d8 01       	movw	r26, r16
     ea0:	c7 01       	movw	r24, r14
     ea2:	8f 77       	andi	r24, 0x7F	; 127
     ea4:	90 70       	andi	r25, 0x00	; 0
     ea6:	a0 70       	andi	r26, 0x00	; 0
     ea8:	b0 70       	andi	r27, 0x00	; 0
     eaa:	80 34       	cpi	r24, 0x40	; 64
     eac:	91 05       	cpc	r25, r1
     eae:	a1 05       	cpc	r26, r1
     eb0:	b1 05       	cpc	r27, r1
     eb2:	39 f4       	brne	.+14     	; 0xec2 <__pack_f+0x144>
     eb4:	e7 fe       	sbrs	r14, 7
     eb6:	0d c0       	rjmp	.+26     	; 0xed2 <__pack_f+0x154>
     eb8:	80 e4       	ldi	r24, 0x40	; 64
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	a0 e0       	ldi	r26, 0x00	; 0
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	04 c0       	rjmp	.+8      	; 0xeca <__pack_f+0x14c>
     ec2:	8f e3       	ldi	r24, 0x3F	; 63
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	a0 e0       	ldi	r26, 0x00	; 0
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	e8 0e       	add	r14, r24
     ecc:	f9 1e       	adc	r15, r25
     ece:	0a 1f       	adc	r16, r26
     ed0:	1b 1f       	adc	r17, r27
     ed2:	17 ff       	sbrs	r17, 7
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <__pack_f+0x162>
     ed6:	16 95       	lsr	r17
     ed8:	07 95       	ror	r16
     eda:	f7 94       	ror	r15
     edc:	e7 94       	ror	r14
     ede:	31 96       	adiw	r30, 0x01	; 1
     ee0:	87 e0       	ldi	r24, 0x07	; 7
     ee2:	16 95       	lsr	r17
     ee4:	07 95       	ror	r16
     ee6:	f7 94       	ror	r15
     ee8:	e7 94       	ror	r14
     eea:	8a 95       	dec	r24
     eec:	d1 f7       	brne	.-12     	; 0xee2 <__pack_f+0x164>
     eee:	05 c0       	rjmp	.+10     	; 0xefa <__pack_f+0x17c>
     ef0:	ee 24       	eor	r14, r14
     ef2:	ff 24       	eor	r15, r15
     ef4:	87 01       	movw	r16, r14
     ef6:	ef ef       	ldi	r30, 0xFF	; 255
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	6e 2f       	mov	r22, r30
     efc:	67 95       	ror	r22
     efe:	66 27       	eor	r22, r22
     f00:	67 95       	ror	r22
     f02:	90 2f       	mov	r25, r16
     f04:	9f 77       	andi	r25, 0x7F	; 127
     f06:	d7 94       	ror	r13
     f08:	dd 24       	eor	r13, r13
     f0a:	d7 94       	ror	r13
     f0c:	8e 2f       	mov	r24, r30
     f0e:	86 95       	lsr	r24
     f10:	49 2f       	mov	r20, r25
     f12:	46 2b       	or	r20, r22
     f14:	58 2f       	mov	r21, r24
     f16:	5d 29       	or	r21, r13
     f18:	b7 01       	movw	r22, r14
     f1a:	ca 01       	movw	r24, r20
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	ff 90       	pop	r15
     f22:	ef 90       	pop	r14
     f24:	df 90       	pop	r13
     f26:	08 95       	ret

00000f28 <__unpack_f>:
     f28:	fc 01       	movw	r30, r24
     f2a:	db 01       	movw	r26, r22
     f2c:	40 81       	ld	r20, Z
     f2e:	51 81       	ldd	r21, Z+1	; 0x01
     f30:	22 81       	ldd	r18, Z+2	; 0x02
     f32:	62 2f       	mov	r22, r18
     f34:	6f 77       	andi	r22, 0x7F	; 127
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	22 1f       	adc	r18, r18
     f3a:	22 27       	eor	r18, r18
     f3c:	22 1f       	adc	r18, r18
     f3e:	93 81       	ldd	r25, Z+3	; 0x03
     f40:	89 2f       	mov	r24, r25
     f42:	88 0f       	add	r24, r24
     f44:	82 2b       	or	r24, r18
     f46:	28 2f       	mov	r18, r24
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	99 1f       	adc	r25, r25
     f4c:	99 27       	eor	r25, r25
     f4e:	99 1f       	adc	r25, r25
     f50:	11 96       	adiw	r26, 0x01	; 1
     f52:	9c 93       	st	X, r25
     f54:	11 97       	sbiw	r26, 0x01	; 1
     f56:	21 15       	cp	r18, r1
     f58:	31 05       	cpc	r19, r1
     f5a:	a9 f5       	brne	.+106    	; 0xfc6 <__unpack_f+0x9e>
     f5c:	41 15       	cp	r20, r1
     f5e:	51 05       	cpc	r21, r1
     f60:	61 05       	cpc	r22, r1
     f62:	71 05       	cpc	r23, r1
     f64:	11 f4       	brne	.+4      	; 0xf6a <__unpack_f+0x42>
     f66:	82 e0       	ldi	r24, 0x02	; 2
     f68:	37 c0       	rjmp	.+110    	; 0xfd8 <__unpack_f+0xb0>
     f6a:	82 e8       	ldi	r24, 0x82	; 130
     f6c:	9f ef       	ldi	r25, 0xFF	; 255
     f6e:	13 96       	adiw	r26, 0x03	; 3
     f70:	9c 93       	st	X, r25
     f72:	8e 93       	st	-X, r24
     f74:	12 97       	sbiw	r26, 0x02	; 2
     f76:	9a 01       	movw	r18, r20
     f78:	ab 01       	movw	r20, r22
     f7a:	67 e0       	ldi	r22, 0x07	; 7
     f7c:	22 0f       	add	r18, r18
     f7e:	33 1f       	adc	r19, r19
     f80:	44 1f       	adc	r20, r20
     f82:	55 1f       	adc	r21, r21
     f84:	6a 95       	dec	r22
     f86:	d1 f7       	brne	.-12     	; 0xf7c <__unpack_f+0x54>
     f88:	83 e0       	ldi	r24, 0x03	; 3
     f8a:	8c 93       	st	X, r24
     f8c:	0d c0       	rjmp	.+26     	; 0xfa8 <__unpack_f+0x80>
     f8e:	22 0f       	add	r18, r18
     f90:	33 1f       	adc	r19, r19
     f92:	44 1f       	adc	r20, r20
     f94:	55 1f       	adc	r21, r21
     f96:	12 96       	adiw	r26, 0x02	; 2
     f98:	8d 91       	ld	r24, X+
     f9a:	9c 91       	ld	r25, X
     f9c:	13 97       	sbiw	r26, 0x03	; 3
     f9e:	01 97       	sbiw	r24, 0x01	; 1
     fa0:	13 96       	adiw	r26, 0x03	; 3
     fa2:	9c 93       	st	X, r25
     fa4:	8e 93       	st	-X, r24
     fa6:	12 97       	sbiw	r26, 0x02	; 2
     fa8:	20 30       	cpi	r18, 0x00	; 0
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	38 07       	cpc	r19, r24
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	48 07       	cpc	r20, r24
     fb2:	80 e4       	ldi	r24, 0x40	; 64
     fb4:	58 07       	cpc	r21, r24
     fb6:	58 f3       	brcs	.-42     	; 0xf8e <__unpack_f+0x66>
     fb8:	14 96       	adiw	r26, 0x04	; 4
     fba:	2d 93       	st	X+, r18
     fbc:	3d 93       	st	X+, r19
     fbe:	4d 93       	st	X+, r20
     fc0:	5c 93       	st	X, r21
     fc2:	17 97       	sbiw	r26, 0x07	; 7
     fc4:	08 95       	ret
     fc6:	2f 3f       	cpi	r18, 0xFF	; 255
     fc8:	31 05       	cpc	r19, r1
     fca:	79 f4       	brne	.+30     	; 0xfea <__unpack_f+0xc2>
     fcc:	41 15       	cp	r20, r1
     fce:	51 05       	cpc	r21, r1
     fd0:	61 05       	cpc	r22, r1
     fd2:	71 05       	cpc	r23, r1
     fd4:	19 f4       	brne	.+6      	; 0xfdc <__unpack_f+0xb4>
     fd6:	84 e0       	ldi	r24, 0x04	; 4
     fd8:	8c 93       	st	X, r24
     fda:	08 95       	ret
     fdc:	64 ff       	sbrs	r22, 4
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <__unpack_f+0xbe>
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	8c 93       	st	X, r24
     fe4:	12 c0       	rjmp	.+36     	; 0x100a <__unpack_f+0xe2>
     fe6:	1c 92       	st	X, r1
     fe8:	10 c0       	rjmp	.+32     	; 0x100a <__unpack_f+0xe2>
     fea:	2f 57       	subi	r18, 0x7F	; 127
     fec:	30 40       	sbci	r19, 0x00	; 0
     fee:	13 96       	adiw	r26, 0x03	; 3
     ff0:	3c 93       	st	X, r19
     ff2:	2e 93       	st	-X, r18
     ff4:	12 97       	sbiw	r26, 0x02	; 2
     ff6:	83 e0       	ldi	r24, 0x03	; 3
     ff8:	8c 93       	st	X, r24
     ffa:	87 e0       	ldi	r24, 0x07	; 7
     ffc:	44 0f       	add	r20, r20
     ffe:	55 1f       	adc	r21, r21
    1000:	66 1f       	adc	r22, r22
    1002:	77 1f       	adc	r23, r23
    1004:	8a 95       	dec	r24
    1006:	d1 f7       	brne	.-12     	; 0xffc <__unpack_f+0xd4>
    1008:	70 64       	ori	r23, 0x40	; 64
    100a:	14 96       	adiw	r26, 0x04	; 4
    100c:	4d 93       	st	X+, r20
    100e:	5d 93       	st	X+, r21
    1010:	6d 93       	st	X+, r22
    1012:	7c 93       	st	X, r23
    1014:	17 97       	sbiw	r26, 0x07	; 7
    1016:	08 95       	ret

00001018 <__fpcmp_parts_f>:
    1018:	1f 93       	push	r17
    101a:	dc 01       	movw	r26, r24
    101c:	fb 01       	movw	r30, r22
    101e:	9c 91       	ld	r25, X
    1020:	92 30       	cpi	r25, 0x02	; 2
    1022:	08 f4       	brcc	.+2      	; 0x1026 <__fpcmp_parts_f+0xe>
    1024:	47 c0       	rjmp	.+142    	; 0x10b4 <__fpcmp_parts_f+0x9c>
    1026:	80 81       	ld	r24, Z
    1028:	82 30       	cpi	r24, 0x02	; 2
    102a:	08 f4       	brcc	.+2      	; 0x102e <__fpcmp_parts_f+0x16>
    102c:	43 c0       	rjmp	.+134    	; 0x10b4 <__fpcmp_parts_f+0x9c>
    102e:	94 30       	cpi	r25, 0x04	; 4
    1030:	51 f4       	brne	.+20     	; 0x1046 <__fpcmp_parts_f+0x2e>
    1032:	11 96       	adiw	r26, 0x01	; 1
    1034:	1c 91       	ld	r17, X
    1036:	84 30       	cpi	r24, 0x04	; 4
    1038:	99 f5       	brne	.+102    	; 0x10a0 <__fpcmp_parts_f+0x88>
    103a:	81 81       	ldd	r24, Z+1	; 0x01
    103c:	68 2f       	mov	r22, r24
    103e:	70 e0       	ldi	r23, 0x00	; 0
    1040:	61 1b       	sub	r22, r17
    1042:	71 09       	sbc	r23, r1
    1044:	3f c0       	rjmp	.+126    	; 0x10c4 <__fpcmp_parts_f+0xac>
    1046:	84 30       	cpi	r24, 0x04	; 4
    1048:	21 f0       	breq	.+8      	; 0x1052 <__fpcmp_parts_f+0x3a>
    104a:	92 30       	cpi	r25, 0x02	; 2
    104c:	31 f4       	brne	.+12     	; 0x105a <__fpcmp_parts_f+0x42>
    104e:	82 30       	cpi	r24, 0x02	; 2
    1050:	b9 f1       	breq	.+110    	; 0x10c0 <__fpcmp_parts_f+0xa8>
    1052:	81 81       	ldd	r24, Z+1	; 0x01
    1054:	88 23       	and	r24, r24
    1056:	89 f1       	breq	.+98     	; 0x10ba <__fpcmp_parts_f+0xa2>
    1058:	2d c0       	rjmp	.+90     	; 0x10b4 <__fpcmp_parts_f+0x9c>
    105a:	11 96       	adiw	r26, 0x01	; 1
    105c:	1c 91       	ld	r17, X
    105e:	11 97       	sbiw	r26, 0x01	; 1
    1060:	82 30       	cpi	r24, 0x02	; 2
    1062:	f1 f0       	breq	.+60     	; 0x10a0 <__fpcmp_parts_f+0x88>
    1064:	81 81       	ldd	r24, Z+1	; 0x01
    1066:	18 17       	cp	r17, r24
    1068:	d9 f4       	brne	.+54     	; 0x10a0 <__fpcmp_parts_f+0x88>
    106a:	12 96       	adiw	r26, 0x02	; 2
    106c:	2d 91       	ld	r18, X+
    106e:	3c 91       	ld	r19, X
    1070:	13 97       	sbiw	r26, 0x03	; 3
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	82 17       	cp	r24, r18
    1078:	93 07       	cpc	r25, r19
    107a:	94 f0       	brlt	.+36     	; 0x10a0 <__fpcmp_parts_f+0x88>
    107c:	28 17       	cp	r18, r24
    107e:	39 07       	cpc	r19, r25
    1080:	bc f0       	brlt	.+46     	; 0x10b0 <__fpcmp_parts_f+0x98>
    1082:	14 96       	adiw	r26, 0x04	; 4
    1084:	8d 91       	ld	r24, X+
    1086:	9d 91       	ld	r25, X+
    1088:	0d 90       	ld	r0, X+
    108a:	bc 91       	ld	r27, X
    108c:	a0 2d       	mov	r26, r0
    108e:	24 81       	ldd	r18, Z+4	; 0x04
    1090:	35 81       	ldd	r19, Z+5	; 0x05
    1092:	46 81       	ldd	r20, Z+6	; 0x06
    1094:	57 81       	ldd	r21, Z+7	; 0x07
    1096:	28 17       	cp	r18, r24
    1098:	39 07       	cpc	r19, r25
    109a:	4a 07       	cpc	r20, r26
    109c:	5b 07       	cpc	r21, r27
    109e:	18 f4       	brcc	.+6      	; 0x10a6 <__fpcmp_parts_f+0x8e>
    10a0:	11 23       	and	r17, r17
    10a2:	41 f0       	breq	.+16     	; 0x10b4 <__fpcmp_parts_f+0x9c>
    10a4:	0a c0       	rjmp	.+20     	; 0x10ba <__fpcmp_parts_f+0xa2>
    10a6:	82 17       	cp	r24, r18
    10a8:	93 07       	cpc	r25, r19
    10aa:	a4 07       	cpc	r26, r20
    10ac:	b5 07       	cpc	r27, r21
    10ae:	40 f4       	brcc	.+16     	; 0x10c0 <__fpcmp_parts_f+0xa8>
    10b0:	11 23       	and	r17, r17
    10b2:	19 f0       	breq	.+6      	; 0x10ba <__fpcmp_parts_f+0xa2>
    10b4:	61 e0       	ldi	r22, 0x01	; 1
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <__fpcmp_parts_f+0xac>
    10ba:	6f ef       	ldi	r22, 0xFF	; 255
    10bc:	7f ef       	ldi	r23, 0xFF	; 255
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <__fpcmp_parts_f+0xac>
    10c0:	60 e0       	ldi	r22, 0x00	; 0
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	cb 01       	movw	r24, r22
    10c6:	1f 91       	pop	r17
    10c8:	08 95       	ret

000010ca <__prologue_saves__>:
    10ca:	2f 92       	push	r2
    10cc:	3f 92       	push	r3
    10ce:	4f 92       	push	r4
    10d0:	5f 92       	push	r5
    10d2:	6f 92       	push	r6
    10d4:	7f 92       	push	r7
    10d6:	8f 92       	push	r8
    10d8:	9f 92       	push	r9
    10da:	af 92       	push	r10
    10dc:	bf 92       	push	r11
    10de:	cf 92       	push	r12
    10e0:	df 92       	push	r13
    10e2:	ef 92       	push	r14
    10e4:	ff 92       	push	r15
    10e6:	0f 93       	push	r16
    10e8:	1f 93       	push	r17
    10ea:	cf 93       	push	r28
    10ec:	df 93       	push	r29
    10ee:	cd b7       	in	r28, 0x3d	; 61
    10f0:	de b7       	in	r29, 0x3e	; 62
    10f2:	ca 1b       	sub	r28, r26
    10f4:	db 0b       	sbc	r29, r27
    10f6:	0f b6       	in	r0, 0x3f	; 63
    10f8:	f8 94       	cli
    10fa:	de bf       	out	0x3e, r29	; 62
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	cd bf       	out	0x3d, r28	; 61
    1100:	09 94       	ijmp

00001102 <__epilogue_restores__>:
    1102:	2a 88       	ldd	r2, Y+18	; 0x12
    1104:	39 88       	ldd	r3, Y+17	; 0x11
    1106:	48 88       	ldd	r4, Y+16	; 0x10
    1108:	5f 84       	ldd	r5, Y+15	; 0x0f
    110a:	6e 84       	ldd	r6, Y+14	; 0x0e
    110c:	7d 84       	ldd	r7, Y+13	; 0x0d
    110e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1110:	9b 84       	ldd	r9, Y+11	; 0x0b
    1112:	aa 84       	ldd	r10, Y+10	; 0x0a
    1114:	b9 84       	ldd	r11, Y+9	; 0x09
    1116:	c8 84       	ldd	r12, Y+8	; 0x08
    1118:	df 80       	ldd	r13, Y+7	; 0x07
    111a:	ee 80       	ldd	r14, Y+6	; 0x06
    111c:	fd 80       	ldd	r15, Y+5	; 0x05
    111e:	0c 81       	ldd	r16, Y+4	; 0x04
    1120:	1b 81       	ldd	r17, Y+3	; 0x03
    1122:	aa 81       	ldd	r26, Y+2	; 0x02
    1124:	b9 81       	ldd	r27, Y+1	; 0x01
    1126:	ce 0f       	add	r28, r30
    1128:	d1 1d       	adc	r29, r1
    112a:	0f b6       	in	r0, 0x3f	; 63
    112c:	f8 94       	cli
    112e:	de bf       	out	0x3e, r29	; 62
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	cd bf       	out	0x3d, r28	; 61
    1134:	ed 01       	movw	r28, r26
    1136:	08 95       	ret

00001138 <_exit>:
    1138:	f8 94       	cli

0000113a <__stop_program>:
    113a:	ff cf       	rjmp	.-2      	; 0x113a <__stop_program>
